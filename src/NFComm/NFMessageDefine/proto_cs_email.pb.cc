// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_cs_email.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto_cs_email.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_email {

namespace {

const ::google::protobuf::Descriptor* UserMailData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserMailData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSMailListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSMailListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSMailListRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSMailListRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSMailReadReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSMailReadReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSMailReadRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSMailReadRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSMailGetItemReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSMailGetItemReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSMailGetItemRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSMailGetItemRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSMailDelReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSMailDelReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSMailDelRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSMailDelRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_CSMailAutoPushRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_CSMailAutoPushRsp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Proto_EMAIL_CS_CMD_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_5fcs_5femail_2eproto() {
  protobuf_AddDesc_proto_5fcs_5femail_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto_cs_email.proto");
  GOOGLE_CHECK(file != NULL);
  UserMailData_descriptor_ = file->message_type(0);
  static const int UserMailData_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMailData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMailData, send_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMailData, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMailData, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMailData, send_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMailData, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMailData, usareaid_),
  };
  UserMailData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserMailData_descriptor_,
      UserMailData::default_instance_,
      UserMailData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMailData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMailData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserMailData));
  MailItem_descriptor_ = file->message_type(1);
  static const int MailItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailItem, add_gold_),
  };
  MailItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MailItem_descriptor_,
      MailItem::default_instance_,
      MailItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MailItem));
  Proto_CSMailListReq_descriptor_ = file->message_type(2);
  static const int Proto_CSMailListReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailListReq, begin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailListReq, end_),
  };
  Proto_CSMailListReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSMailListReq_descriptor_,
      Proto_CSMailListReq::default_instance_,
      Proto_CSMailListReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailListReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailListReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSMailListReq));
  Proto_CSMailListRsp_descriptor_ = file->message_type(3);
  static const int Proto_CSMailListRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailListRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailListRsp, role_mail_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailListRsp, all_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailListRsp, no_read_count_),
  };
  Proto_CSMailListRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSMailListRsp_descriptor_,
      Proto_CSMailListRsp::default_instance_,
      Proto_CSMailListRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailListRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailListRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSMailListRsp));
  Proto_CSMailReadReq_descriptor_ = file->message_type(4);
  static const int Proto_CSMailReadReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailReadReq, mail_id_),
  };
  Proto_CSMailReadReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSMailReadReq_descriptor_,
      Proto_CSMailReadReq::default_instance_,
      Proto_CSMailReadReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailReadReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailReadReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSMailReadReq));
  Proto_CSMailReadRsp_descriptor_ = file->message_type(5);
  static const int Proto_CSMailReadRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailReadRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailReadRsp, mail_id_list_),
  };
  Proto_CSMailReadRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSMailReadRsp_descriptor_,
      Proto_CSMailReadRsp::default_instance_,
      Proto_CSMailReadRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailReadRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailReadRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSMailReadRsp));
  Proto_CSMailGetItemReq_descriptor_ = file->message_type(6);
  static const int Proto_CSMailGetItemReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailGetItemReq, mail_id_),
  };
  Proto_CSMailGetItemReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSMailGetItemReq_descriptor_,
      Proto_CSMailGetItemReq::default_instance_,
      Proto_CSMailGetItemReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailGetItemReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailGetItemReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSMailGetItemReq));
  Proto_CSMailGetItemRsp_descriptor_ = file->message_type(7);
  static const int Proto_CSMailGetItemRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailGetItemRsp, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailGetItemRsp, no_read_count_),
  };
  Proto_CSMailGetItemRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSMailGetItemRsp_descriptor_,
      Proto_CSMailGetItemRsp::default_instance_,
      Proto_CSMailGetItemRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailGetItemRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailGetItemRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSMailGetItemRsp));
  Proto_CSMailDelReq_descriptor_ = file->message_type(8);
  static const int Proto_CSMailDelReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailDelReq, mail_id_),
  };
  Proto_CSMailDelReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSMailDelReq_descriptor_,
      Proto_CSMailDelReq::default_instance_,
      Proto_CSMailDelReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailDelReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailDelReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSMailDelReq));
  Proto_CSMailDelRsp_descriptor_ = file->message_type(9);
  static const int Proto_CSMailDelRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailDelRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailDelRsp, mail_id_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailDelRsp, all_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailDelRsp, no_read_count_),
  };
  Proto_CSMailDelRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSMailDelRsp_descriptor_,
      Proto_CSMailDelRsp::default_instance_,
      Proto_CSMailDelRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailDelRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailDelRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSMailDelRsp));
  Proto_CSMailAutoPushRsp_descriptor_ = file->message_type(10);
  static const int Proto_CSMailAutoPushRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailAutoPushRsp, all_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailAutoPushRsp, no_read_count_),
  };
  Proto_CSMailAutoPushRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_CSMailAutoPushRsp_descriptor_,
      Proto_CSMailAutoPushRsp::default_instance_,
      Proto_CSMailAutoPushRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailAutoPushRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_CSMailAutoPushRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_CSMailAutoPushRsp));
  Proto_EMAIL_CS_CMD_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_5fcs_5femail_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserMailData_descriptor_, &UserMailData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MailItem_descriptor_, &MailItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSMailListReq_descriptor_, &Proto_CSMailListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSMailListRsp_descriptor_, &Proto_CSMailListRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSMailReadReq_descriptor_, &Proto_CSMailReadReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSMailReadRsp_descriptor_, &Proto_CSMailReadRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSMailGetItemReq_descriptor_, &Proto_CSMailGetItemReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSMailGetItemRsp_descriptor_, &Proto_CSMailGetItemRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSMailDelReq_descriptor_, &Proto_CSMailDelReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSMailDelRsp_descriptor_, &Proto_CSMailDelRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_CSMailAutoPushRsp_descriptor_, &Proto_CSMailAutoPushRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_5fcs_5femail_2eproto() {
  delete UserMailData::default_instance_;
  delete UserMailData_reflection_;
  delete MailItem::default_instance_;
  delete MailItem_reflection_;
  delete Proto_CSMailListReq::default_instance_;
  delete Proto_CSMailListReq_reflection_;
  delete Proto_CSMailListRsp::default_instance_;
  delete Proto_CSMailListRsp_reflection_;
  delete Proto_CSMailReadReq::default_instance_;
  delete Proto_CSMailReadReq_reflection_;
  delete Proto_CSMailReadRsp::default_instance_;
  delete Proto_CSMailReadRsp_reflection_;
  delete Proto_CSMailGetItemReq::default_instance_;
  delete Proto_CSMailGetItemReq_reflection_;
  delete Proto_CSMailGetItemRsp::default_instance_;
  delete Proto_CSMailGetItemRsp_reflection_;
  delete Proto_CSMailDelReq::default_instance_;
  delete Proto_CSMailDelReq_reflection_;
  delete Proto_CSMailDelRsp::default_instance_;
  delete Proto_CSMailDelRsp_reflection_;
  delete Proto_CSMailAutoPushRsp::default_instance_;
  delete Proto_CSMailAutoPushRsp_reflection_;
}

void protobuf_AddDesc_proto_5fcs_5femail_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024proto_cs_email.proto\022\013proto_email\"\202\001\n\014"
    "UserMailData\022\n\n\002id\030\001 \001(\004\022\021\n\tsend_name\030\002 "
    "\001(\t\022\r\n\005title\030\003 \001(\t\022\017\n\007content\030\004 \001(\t\022\021\n\ts"
    "end_time\030\005 \001(\004\022\016\n\006status\030\006 \001(\r\022\020\n\010usArea"
    "Id\030\007 \001(\005\"(\n\010MailItem\022\n\n\002id\030\001 \001(\004\022\020\n\010add_"
    "gold\030\002 \001(\005\"1\n\023Proto_CSMailListReq\022\r\n\005beg"
    "in\030\001 \001(\005\022\013\n\003end\030\002 \001(\005\"\202\001\n\023Proto_CSMailLi"
    "stRsp\022\016\n\006result\030\001 \001(\005\0221\n\016role_mail_list\030"
    "\002 \003(\0132\031.proto_email.UserMailData\022\021\n\tall_"
    "count\030\003 \001(\005\022\025\n\rno_read_count\030\004 \001(\005\"&\n\023Pr"
    "oto_CSMailReadReq\022\017\n\007mail_id\030\001 \001(\004\";\n\023Pr"
    "oto_CSMailReadRsp\022\016\n\006result\030\001 \001(\r\022\024\n\014mai"
    "l_id_list\030\002 \003(\004\")\n\026Proto_CSMailGetItemRe"
    "q\022\017\n\007mail_id\030\001 \001(\004\"Y\n\026Proto_CSMailGetIte"
    "mRsp\022(\n\titem_list\030\001 \003(\0132\025.proto_email.Ma"
    "ilItem\022\025\n\rno_read_count\030\002 \001(\r\"%\n\022Proto_C"
    "SMailDelReq\022\017\n\007mail_id\030\001 \003(\004\"d\n\022Proto_CS"
    "MailDelRsp\022\016\n\006result\030\001 \001(\005\022\024\n\014mail_id_li"
    "st\030\002 \003(\004\022\021\n\tall_count\030\003 \001(\005\022\025\n\rno_read_c"
    "ount\030\004 \001(\005\"C\n\027Proto_CSMailAutoPushRsp\022\021\n"
    "\tall_count\030\001 \001(\005\022\025\n\rno_read_count\030\002 \001(\005*"
    "\255\002\n\022Proto_EMAIL_CS_CMD\022\034\n\027NF_CS_SNS_MAIL"
    "_LIST_REQ\020\376\010\022\034\n\027NF_SC_SNS_MAIL_LIST_RSP\020"
    "\377\010\022\034\n\027NF_CS_SNS_MAIL_READ_REQ\020\200\t\022\034\n\027NF_S"
    "C_SNS_MAIL_READ_RSP\020\201\t\022\033\n\026NF_CS_SNS_MAIL"
    "_DEL_REQ\020\202\t\022\033\n\026NF_SC_SNS_MAIL_DEL_RSP\020\203\t"
    "\022!\n\034NF_SC_SNS_MAIL_AUTO_PUSH_RSP\020\204\t\022 \n\033N"
    "F_CS_SNS_MAIL_GET_ITEM_REQ\020\205\t\022 \n\033NF_SC_S"
    "NS_MAIL_GET_ITEM_RSP\020\206\t", 1143);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto_cs_email.proto", &protobuf_RegisterTypes);
  UserMailData::default_instance_ = new UserMailData();
  MailItem::default_instance_ = new MailItem();
  Proto_CSMailListReq::default_instance_ = new Proto_CSMailListReq();
  Proto_CSMailListRsp::default_instance_ = new Proto_CSMailListRsp();
  Proto_CSMailReadReq::default_instance_ = new Proto_CSMailReadReq();
  Proto_CSMailReadRsp::default_instance_ = new Proto_CSMailReadRsp();
  Proto_CSMailGetItemReq::default_instance_ = new Proto_CSMailGetItemReq();
  Proto_CSMailGetItemRsp::default_instance_ = new Proto_CSMailGetItemRsp();
  Proto_CSMailDelReq::default_instance_ = new Proto_CSMailDelReq();
  Proto_CSMailDelRsp::default_instance_ = new Proto_CSMailDelRsp();
  Proto_CSMailAutoPushRsp::default_instance_ = new Proto_CSMailAutoPushRsp();
  UserMailData::default_instance_->InitAsDefaultInstance();
  MailItem::default_instance_->InitAsDefaultInstance();
  Proto_CSMailListReq::default_instance_->InitAsDefaultInstance();
  Proto_CSMailListRsp::default_instance_->InitAsDefaultInstance();
  Proto_CSMailReadReq::default_instance_->InitAsDefaultInstance();
  Proto_CSMailReadRsp::default_instance_->InitAsDefaultInstance();
  Proto_CSMailGetItemReq::default_instance_->InitAsDefaultInstance();
  Proto_CSMailGetItemRsp::default_instance_->InitAsDefaultInstance();
  Proto_CSMailDelReq::default_instance_->InitAsDefaultInstance();
  Proto_CSMailDelRsp::default_instance_->InitAsDefaultInstance();
  Proto_CSMailAutoPushRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_5fcs_5femail_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_5fcs_5femail_2eproto {
  StaticDescriptorInitializer_proto_5fcs_5femail_2eproto() {
    protobuf_AddDesc_proto_5fcs_5femail_2eproto();
  }
} static_descriptor_initializer_proto_5fcs_5femail_2eproto_;
const ::google::protobuf::EnumDescriptor* Proto_EMAIL_CS_CMD_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_EMAIL_CS_CMD_descriptor_;
}
bool Proto_EMAIL_CS_CMD_IsValid(int value) {
  switch(value) {
    case 1150:
    case 1151:
    case 1152:
    case 1153:
    case 1154:
    case 1155:
    case 1156:
    case 1157:
    case 1158:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int UserMailData::kIdFieldNumber;
const int UserMailData::kSendNameFieldNumber;
const int UserMailData::kTitleFieldNumber;
const int UserMailData::kContentFieldNumber;
const int UserMailData::kSendTimeFieldNumber;
const int UserMailData::kStatusFieldNumber;
const int UserMailData::kUsAreaIdFieldNumber;
#endif  // !_MSC_VER

UserMailData::UserMailData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserMailData::InitAsDefaultInstance() {
}

UserMailData::UserMailData(const UserMailData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserMailData::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  send_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  send_time_ = GOOGLE_ULONGLONG(0);
  status_ = 0u;
  usareaid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserMailData::~UserMailData() {
  SharedDtor();
}

void UserMailData::SharedDtor() {
  if (send_name_ != &::google::protobuf::internal::kEmptyString) {
    delete send_name_;
  }
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void UserMailData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserMailData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserMailData_descriptor_;
}

const UserMailData& UserMailData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_5fcs_5femail_2eproto();
  return *default_instance_;
}

UserMailData* UserMailData::default_instance_ = NULL;

UserMailData* UserMailData::New() const {
  return new UserMailData;
}

void UserMailData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_ULONGLONG(0);
    if (has_send_name()) {
      if (send_name_ != &::google::protobuf::internal::kEmptyString) {
        send_name_->clear();
      }
    }
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
    send_time_ = GOOGLE_ULONGLONG(0);
    status_ = 0u;
    usareaid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserMailData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_send_name;
        break;
      }

      // optional string send_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_send_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_send_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->send_name().data(), this->send_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_title;
        break;
      }

      // optional string title = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_content;
        break;
      }

      // optional string content = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_send_time;
        break;
      }

      // optional uint64 send_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_send_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &send_time_)));
          set_has_send_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_status;
        break;
      }

      // optional uint32 status = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_usAreaId;
        break;
      }

      // optional int32 usAreaId = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_usAreaId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usareaid_)));
          set_has_usareaid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserMailData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional string send_name = 2;
  if (has_send_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->send_name().data(), this->send_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->send_name(), output);
  }

  // optional string title = 3;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->title(), output);
  }

  // optional string content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->content(), output);
  }

  // optional uint64 send_time = 5;
  if (has_send_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->send_time(), output);
  }

  // optional uint32 status = 6;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->status(), output);
  }

  // optional int32 usAreaId = 7;
  if (has_usareaid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->usareaid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserMailData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional string send_name = 2;
  if (has_send_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->send_name().data(), this->send_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->send_name(), target);
  }

  // optional string title = 3;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  // optional string content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->content(), target);
  }

  // optional uint64 send_time = 5;
  if (has_send_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->send_time(), target);
  }

  // optional uint32 status = 6;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->status(), target);
  }

  // optional int32 usAreaId = 7;
  if (has_usareaid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->usareaid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserMailData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional string send_name = 2;
    if (has_send_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->send_name());
    }

    // optional string title = 3;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string content = 4;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional uint64 send_time = 5;
    if (has_send_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->send_time());
    }

    // optional uint32 status = 6;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

    // optional int32 usAreaId = 7;
    if (has_usareaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usareaid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserMailData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserMailData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserMailData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserMailData::MergeFrom(const UserMailData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_send_name()) {
      set_send_name(from.send_name());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_send_time()) {
      set_send_time(from.send_time());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_usareaid()) {
      set_usareaid(from.usareaid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserMailData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserMailData::CopyFrom(const UserMailData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserMailData::IsInitialized() const {

  return true;
}

void UserMailData::Swap(UserMailData* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(send_name_, other->send_name_);
    std::swap(title_, other->title_);
    std::swap(content_, other->content_);
    std::swap(send_time_, other->send_time_);
    std::swap(status_, other->status_);
    std::swap(usareaid_, other->usareaid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserMailData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserMailData_descriptor_;
  metadata.reflection = UserMailData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MailItem::kIdFieldNumber;
const int MailItem::kAddGoldFieldNumber;
#endif  // !_MSC_VER

MailItem::MailItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MailItem::InitAsDefaultInstance() {
}

MailItem::MailItem(const MailItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MailItem::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  add_gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailItem::~MailItem() {
  SharedDtor();
}

void MailItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MailItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailItem_descriptor_;
}

const MailItem& MailItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_5fcs_5femail_2eproto();
  return *default_instance_;
}

MailItem* MailItem::default_instance_ = NULL;

MailItem* MailItem::New() const {
  return new MailItem;
}

void MailItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_ULONGLONG(0);
    add_gold_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MailItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_add_gold;
        break;
      }

      // optional int32 add_gold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_gold_)));
          set_has_add_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MailItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional int32 add_gold = 2;
  if (has_add_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->add_gold(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MailItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional int32 add_gold = 2;
  if (has_add_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->add_gold(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MailItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional int32 add_gold = 2;
    if (has_add_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_gold());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MailItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MailItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MailItem::MergeFrom(const MailItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_add_gold()) {
      set_add_gold(from.add_gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MailItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailItem::CopyFrom(const MailItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailItem::IsInitialized() const {

  return true;
}

void MailItem::Swap(MailItem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(add_gold_, other->add_gold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MailItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailItem_descriptor_;
  metadata.reflection = MailItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSMailListReq::kBeginFieldNumber;
const int Proto_CSMailListReq::kEndFieldNumber;
#endif  // !_MSC_VER

Proto_CSMailListReq::Proto_CSMailListReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSMailListReq::InitAsDefaultInstance() {
}

Proto_CSMailListReq::Proto_CSMailListReq(const Proto_CSMailListReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSMailListReq::SharedCtor() {
  _cached_size_ = 0;
  begin_ = 0;
  end_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSMailListReq::~Proto_CSMailListReq() {
  SharedDtor();
}

void Proto_CSMailListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_CSMailListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSMailListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSMailListReq_descriptor_;
}

const Proto_CSMailListReq& Proto_CSMailListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_5fcs_5femail_2eproto();
  return *default_instance_;
}

Proto_CSMailListReq* Proto_CSMailListReq::default_instance_ = NULL;

Proto_CSMailListReq* Proto_CSMailListReq::New() const {
  return new Proto_CSMailListReq;
}

void Proto_CSMailListReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    begin_ = 0;
    end_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSMailListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 begin = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &begin_)));
          set_has_begin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end;
        break;
      }

      // optional int32 end = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_)));
          set_has_end();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSMailListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 begin = 1;
  if (has_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->begin(), output);
  }

  // optional int32 end = 2;
  if (has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->end(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSMailListReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 begin = 1;
  if (has_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->begin(), target);
  }

  // optional int32 end = 2;
  if (has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->end(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSMailListReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 begin = 1;
    if (has_begin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->begin());
    }

    // optional int32 end = 2;
    if (has_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->end());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSMailListReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSMailListReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSMailListReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSMailListReq::MergeFrom(const Proto_CSMailListReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_begin()) {
      set_begin(from.begin());
    }
    if (from.has_end()) {
      set_end(from.end());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSMailListReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSMailListReq::CopyFrom(const Proto_CSMailListReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSMailListReq::IsInitialized() const {

  return true;
}

void Proto_CSMailListReq::Swap(Proto_CSMailListReq* other) {
  if (other != this) {
    std::swap(begin_, other->begin_);
    std::swap(end_, other->end_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSMailListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSMailListReq_descriptor_;
  metadata.reflection = Proto_CSMailListReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSMailListRsp::kResultFieldNumber;
const int Proto_CSMailListRsp::kRoleMailListFieldNumber;
const int Proto_CSMailListRsp::kAllCountFieldNumber;
const int Proto_CSMailListRsp::kNoReadCountFieldNumber;
#endif  // !_MSC_VER

Proto_CSMailListRsp::Proto_CSMailListRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSMailListRsp::InitAsDefaultInstance() {
}

Proto_CSMailListRsp::Proto_CSMailListRsp(const Proto_CSMailListRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSMailListRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  all_count_ = 0;
  no_read_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSMailListRsp::~Proto_CSMailListRsp() {
  SharedDtor();
}

void Proto_CSMailListRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_CSMailListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSMailListRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSMailListRsp_descriptor_;
}

const Proto_CSMailListRsp& Proto_CSMailListRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_5fcs_5femail_2eproto();
  return *default_instance_;
}

Proto_CSMailListRsp* Proto_CSMailListRsp::default_instance_ = NULL;

Proto_CSMailListRsp* Proto_CSMailListRsp::New() const {
  return new Proto_CSMailListRsp;
}

void Proto_CSMailListRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    all_count_ = 0;
    no_read_count_ = 0;
  }
  role_mail_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSMailListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_role_mail_list;
        break;
      }

      // repeated .proto_email.UserMailData role_mail_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_mail_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_mail_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_role_mail_list;
        if (input->ExpectTag(24)) goto parse_all_count;
        break;
      }

      // optional int32 all_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_all_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &all_count_)));
          set_has_all_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_no_read_count;
        break;
      }

      // optional int32 no_read_count = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_no_read_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_read_count_)));
          set_has_no_read_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSMailListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .proto_email.UserMailData role_mail_list = 2;
  for (int i = 0; i < this->role_mail_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->role_mail_list(i), output);
  }

  // optional int32 all_count = 3;
  if (has_all_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->all_count(), output);
  }

  // optional int32 no_read_count = 4;
  if (has_no_read_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->no_read_count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSMailListRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .proto_email.UserMailData role_mail_list = 2;
  for (int i = 0; i < this->role_mail_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->role_mail_list(i), target);
  }

  // optional int32 all_count = 3;
  if (has_all_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->all_count(), target);
  }

  // optional int32 no_read_count = 4;
  if (has_no_read_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->no_read_count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSMailListRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 all_count = 3;
    if (has_all_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->all_count());
    }

    // optional int32 no_read_count = 4;
    if (has_no_read_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_read_count());
    }

  }
  // repeated .proto_email.UserMailData role_mail_list = 2;
  total_size += 1 * this->role_mail_list_size();
  for (int i = 0; i < this->role_mail_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_mail_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSMailListRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSMailListRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSMailListRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSMailListRsp::MergeFrom(const Proto_CSMailListRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_mail_list_.MergeFrom(from.role_mail_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_all_count()) {
      set_all_count(from.all_count());
    }
    if (from.has_no_read_count()) {
      set_no_read_count(from.no_read_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSMailListRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSMailListRsp::CopyFrom(const Proto_CSMailListRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSMailListRsp::IsInitialized() const {

  return true;
}

void Proto_CSMailListRsp::Swap(Proto_CSMailListRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    role_mail_list_.Swap(&other->role_mail_list_);
    std::swap(all_count_, other->all_count_);
    std::swap(no_read_count_, other->no_read_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSMailListRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSMailListRsp_descriptor_;
  metadata.reflection = Proto_CSMailListRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSMailReadReq::kMailIdFieldNumber;
#endif  // !_MSC_VER

Proto_CSMailReadReq::Proto_CSMailReadReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSMailReadReq::InitAsDefaultInstance() {
}

Proto_CSMailReadReq::Proto_CSMailReadReq(const Proto_CSMailReadReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSMailReadReq::SharedCtor() {
  _cached_size_ = 0;
  mail_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSMailReadReq::~Proto_CSMailReadReq() {
  SharedDtor();
}

void Proto_CSMailReadReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_CSMailReadReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSMailReadReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSMailReadReq_descriptor_;
}

const Proto_CSMailReadReq& Proto_CSMailReadReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_5fcs_5femail_2eproto();
  return *default_instance_;
}

Proto_CSMailReadReq* Proto_CSMailReadReq::default_instance_ = NULL;

Proto_CSMailReadReq* Proto_CSMailReadReq::New() const {
  return new Proto_CSMailReadReq;
}

void Proto_CSMailReadReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mail_id_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSMailReadReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 mail_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mail_id_)));
          set_has_mail_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSMailReadReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 mail_id = 1;
  if (has_mail_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mail_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSMailReadReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 mail_id = 1;
  if (has_mail_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mail_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSMailReadReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 mail_id = 1;
    if (has_mail_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mail_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSMailReadReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSMailReadReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSMailReadReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSMailReadReq::MergeFrom(const Proto_CSMailReadReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mail_id()) {
      set_mail_id(from.mail_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSMailReadReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSMailReadReq::CopyFrom(const Proto_CSMailReadReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSMailReadReq::IsInitialized() const {

  return true;
}

void Proto_CSMailReadReq::Swap(Proto_CSMailReadReq* other) {
  if (other != this) {
    std::swap(mail_id_, other->mail_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSMailReadReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSMailReadReq_descriptor_;
  metadata.reflection = Proto_CSMailReadReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSMailReadRsp::kResultFieldNumber;
const int Proto_CSMailReadRsp::kMailIdListFieldNumber;
#endif  // !_MSC_VER

Proto_CSMailReadRsp::Proto_CSMailReadRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSMailReadRsp::InitAsDefaultInstance() {
}

Proto_CSMailReadRsp::Proto_CSMailReadRsp(const Proto_CSMailReadRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSMailReadRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSMailReadRsp::~Proto_CSMailReadRsp() {
  SharedDtor();
}

void Proto_CSMailReadRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_CSMailReadRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSMailReadRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSMailReadRsp_descriptor_;
}

const Proto_CSMailReadRsp& Proto_CSMailReadRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_5fcs_5femail_2eproto();
  return *default_instance_;
}

Proto_CSMailReadRsp* Proto_CSMailReadRsp::default_instance_ = NULL;

Proto_CSMailReadRsp* Proto_CSMailReadRsp::New() const {
  return new Proto_CSMailReadRsp;
}

void Proto_CSMailReadRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0u;
  }
  mail_id_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSMailReadRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mail_id_list;
        break;
      }

      // repeated uint64 mail_id_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mail_id_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_mail_id_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_mail_id_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mail_id_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSMailReadRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // repeated uint64 mail_id_list = 2;
  for (int i = 0; i < this->mail_id_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->mail_id_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSMailReadRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // repeated uint64 mail_id_list = 2;
  for (int i = 0; i < this->mail_id_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->mail_id_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSMailReadRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

  }
  // repeated uint64 mail_id_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->mail_id_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->mail_id_list(i));
    }
    total_size += 1 * this->mail_id_list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSMailReadRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSMailReadRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSMailReadRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSMailReadRsp::MergeFrom(const Proto_CSMailReadRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  mail_id_list_.MergeFrom(from.mail_id_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSMailReadRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSMailReadRsp::CopyFrom(const Proto_CSMailReadRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSMailReadRsp::IsInitialized() const {

  return true;
}

void Proto_CSMailReadRsp::Swap(Proto_CSMailReadRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    mail_id_list_.Swap(&other->mail_id_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSMailReadRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSMailReadRsp_descriptor_;
  metadata.reflection = Proto_CSMailReadRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSMailGetItemReq::kMailIdFieldNumber;
#endif  // !_MSC_VER

Proto_CSMailGetItemReq::Proto_CSMailGetItemReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSMailGetItemReq::InitAsDefaultInstance() {
}

Proto_CSMailGetItemReq::Proto_CSMailGetItemReq(const Proto_CSMailGetItemReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSMailGetItemReq::SharedCtor() {
  _cached_size_ = 0;
  mail_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSMailGetItemReq::~Proto_CSMailGetItemReq() {
  SharedDtor();
}

void Proto_CSMailGetItemReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_CSMailGetItemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSMailGetItemReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSMailGetItemReq_descriptor_;
}

const Proto_CSMailGetItemReq& Proto_CSMailGetItemReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_5fcs_5femail_2eproto();
  return *default_instance_;
}

Proto_CSMailGetItemReq* Proto_CSMailGetItemReq::default_instance_ = NULL;

Proto_CSMailGetItemReq* Proto_CSMailGetItemReq::New() const {
  return new Proto_CSMailGetItemReq;
}

void Proto_CSMailGetItemReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mail_id_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSMailGetItemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 mail_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mail_id_)));
          set_has_mail_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSMailGetItemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 mail_id = 1;
  if (has_mail_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mail_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSMailGetItemReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 mail_id = 1;
  if (has_mail_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mail_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSMailGetItemReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 mail_id = 1;
    if (has_mail_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mail_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSMailGetItemReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSMailGetItemReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSMailGetItemReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSMailGetItemReq::MergeFrom(const Proto_CSMailGetItemReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mail_id()) {
      set_mail_id(from.mail_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSMailGetItemReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSMailGetItemReq::CopyFrom(const Proto_CSMailGetItemReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSMailGetItemReq::IsInitialized() const {

  return true;
}

void Proto_CSMailGetItemReq::Swap(Proto_CSMailGetItemReq* other) {
  if (other != this) {
    std::swap(mail_id_, other->mail_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSMailGetItemReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSMailGetItemReq_descriptor_;
  metadata.reflection = Proto_CSMailGetItemReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSMailGetItemRsp::kItemListFieldNumber;
const int Proto_CSMailGetItemRsp::kNoReadCountFieldNumber;
#endif  // !_MSC_VER

Proto_CSMailGetItemRsp::Proto_CSMailGetItemRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSMailGetItemRsp::InitAsDefaultInstance() {
}

Proto_CSMailGetItemRsp::Proto_CSMailGetItemRsp(const Proto_CSMailGetItemRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSMailGetItemRsp::SharedCtor() {
  _cached_size_ = 0;
  no_read_count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSMailGetItemRsp::~Proto_CSMailGetItemRsp() {
  SharedDtor();
}

void Proto_CSMailGetItemRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_CSMailGetItemRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSMailGetItemRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSMailGetItemRsp_descriptor_;
}

const Proto_CSMailGetItemRsp& Proto_CSMailGetItemRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_5fcs_5femail_2eproto();
  return *default_instance_;
}

Proto_CSMailGetItemRsp* Proto_CSMailGetItemRsp::default_instance_ = NULL;

Proto_CSMailGetItemRsp* Proto_CSMailGetItemRsp::New() const {
  return new Proto_CSMailGetItemRsp;
}

void Proto_CSMailGetItemRsp::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    no_read_count_ = 0u;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSMailGetItemRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_email.MailItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectTag(16)) goto parse_no_read_count;
        break;
      }

      // optional uint32 no_read_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_no_read_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &no_read_count_)));
          set_has_no_read_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSMailGetItemRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_email.MailItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }

  // optional uint32 no_read_count = 2;
  if (has_no_read_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->no_read_count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSMailGetItemRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_email.MailItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }

  // optional uint32 no_read_count = 2;
  if (has_no_read_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->no_read_count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSMailGetItemRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 no_read_count = 2;
    if (has_no_read_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->no_read_count());
    }

  }
  // repeated .proto_email.MailItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSMailGetItemRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSMailGetItemRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSMailGetItemRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSMailGetItemRsp::MergeFrom(const Proto_CSMailGetItemRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_no_read_count()) {
      set_no_read_count(from.no_read_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSMailGetItemRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSMailGetItemRsp::CopyFrom(const Proto_CSMailGetItemRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSMailGetItemRsp::IsInitialized() const {

  return true;
}

void Proto_CSMailGetItemRsp::Swap(Proto_CSMailGetItemRsp* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(no_read_count_, other->no_read_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSMailGetItemRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSMailGetItemRsp_descriptor_;
  metadata.reflection = Proto_CSMailGetItemRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSMailDelReq::kMailIdFieldNumber;
#endif  // !_MSC_VER

Proto_CSMailDelReq::Proto_CSMailDelReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSMailDelReq::InitAsDefaultInstance() {
}

Proto_CSMailDelReq::Proto_CSMailDelReq(const Proto_CSMailDelReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSMailDelReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSMailDelReq::~Proto_CSMailDelReq() {
  SharedDtor();
}

void Proto_CSMailDelReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_CSMailDelReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSMailDelReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSMailDelReq_descriptor_;
}

const Proto_CSMailDelReq& Proto_CSMailDelReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_5fcs_5femail_2eproto();
  return *default_instance_;
}

Proto_CSMailDelReq* Proto_CSMailDelReq::default_instance_ = NULL;

Proto_CSMailDelReq* Proto_CSMailDelReq::New() const {
  return new Proto_CSMailDelReq;
}

void Proto_CSMailDelReq::Clear() {
  mail_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSMailDelReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 mail_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mail_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_mail_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_mail_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_mail_id;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSMailDelReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint64 mail_id = 1;
  for (int i = 0; i < this->mail_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->mail_id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSMailDelReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint64 mail_id = 1;
  for (int i = 0; i < this->mail_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->mail_id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSMailDelReq::ByteSize() const {
  int total_size = 0;

  // repeated uint64 mail_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->mail_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->mail_id(i));
    }
    total_size += 1 * this->mail_id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSMailDelReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSMailDelReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSMailDelReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSMailDelReq::MergeFrom(const Proto_CSMailDelReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mail_id_.MergeFrom(from.mail_id_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSMailDelReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSMailDelReq::CopyFrom(const Proto_CSMailDelReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSMailDelReq::IsInitialized() const {

  return true;
}

void Proto_CSMailDelReq::Swap(Proto_CSMailDelReq* other) {
  if (other != this) {
    mail_id_.Swap(&other->mail_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSMailDelReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSMailDelReq_descriptor_;
  metadata.reflection = Proto_CSMailDelReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSMailDelRsp::kResultFieldNumber;
const int Proto_CSMailDelRsp::kMailIdListFieldNumber;
const int Proto_CSMailDelRsp::kAllCountFieldNumber;
const int Proto_CSMailDelRsp::kNoReadCountFieldNumber;
#endif  // !_MSC_VER

Proto_CSMailDelRsp::Proto_CSMailDelRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSMailDelRsp::InitAsDefaultInstance() {
}

Proto_CSMailDelRsp::Proto_CSMailDelRsp(const Proto_CSMailDelRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSMailDelRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  all_count_ = 0;
  no_read_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSMailDelRsp::~Proto_CSMailDelRsp() {
  SharedDtor();
}

void Proto_CSMailDelRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_CSMailDelRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSMailDelRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSMailDelRsp_descriptor_;
}

const Proto_CSMailDelRsp& Proto_CSMailDelRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_5fcs_5femail_2eproto();
  return *default_instance_;
}

Proto_CSMailDelRsp* Proto_CSMailDelRsp::default_instance_ = NULL;

Proto_CSMailDelRsp* Proto_CSMailDelRsp::New() const {
  return new Proto_CSMailDelRsp;
}

void Proto_CSMailDelRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    all_count_ = 0;
    no_read_count_ = 0;
  }
  mail_id_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSMailDelRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mail_id_list;
        break;
      }

      // repeated uint64 mail_id_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mail_id_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_mail_id_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_mail_id_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mail_id_list;
        if (input->ExpectTag(24)) goto parse_all_count;
        break;
      }

      // optional int32 all_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_all_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &all_count_)));
          set_has_all_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_no_read_count;
        break;
      }

      // optional int32 no_read_count = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_no_read_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_read_count_)));
          set_has_no_read_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSMailDelRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated uint64 mail_id_list = 2;
  for (int i = 0; i < this->mail_id_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->mail_id_list(i), output);
  }

  // optional int32 all_count = 3;
  if (has_all_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->all_count(), output);
  }

  // optional int32 no_read_count = 4;
  if (has_no_read_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->no_read_count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSMailDelRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated uint64 mail_id_list = 2;
  for (int i = 0; i < this->mail_id_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->mail_id_list(i), target);
  }

  // optional int32 all_count = 3;
  if (has_all_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->all_count(), target);
  }

  // optional int32 no_read_count = 4;
  if (has_no_read_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->no_read_count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSMailDelRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 all_count = 3;
    if (has_all_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->all_count());
    }

    // optional int32 no_read_count = 4;
    if (has_no_read_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_read_count());
    }

  }
  // repeated uint64 mail_id_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->mail_id_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->mail_id_list(i));
    }
    total_size += 1 * this->mail_id_list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSMailDelRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSMailDelRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSMailDelRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSMailDelRsp::MergeFrom(const Proto_CSMailDelRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  mail_id_list_.MergeFrom(from.mail_id_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_all_count()) {
      set_all_count(from.all_count());
    }
    if (from.has_no_read_count()) {
      set_no_read_count(from.no_read_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSMailDelRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSMailDelRsp::CopyFrom(const Proto_CSMailDelRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSMailDelRsp::IsInitialized() const {

  return true;
}

void Proto_CSMailDelRsp::Swap(Proto_CSMailDelRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    mail_id_list_.Swap(&other->mail_id_list_);
    std::swap(all_count_, other->all_count_);
    std::swap(no_read_count_, other->no_read_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSMailDelRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSMailDelRsp_descriptor_;
  metadata.reflection = Proto_CSMailDelRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_CSMailAutoPushRsp::kAllCountFieldNumber;
const int Proto_CSMailAutoPushRsp::kNoReadCountFieldNumber;
#endif  // !_MSC_VER

Proto_CSMailAutoPushRsp::Proto_CSMailAutoPushRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_CSMailAutoPushRsp::InitAsDefaultInstance() {
}

Proto_CSMailAutoPushRsp::Proto_CSMailAutoPushRsp(const Proto_CSMailAutoPushRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_CSMailAutoPushRsp::SharedCtor() {
  _cached_size_ = 0;
  all_count_ = 0;
  no_read_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_CSMailAutoPushRsp::~Proto_CSMailAutoPushRsp() {
  SharedDtor();
}

void Proto_CSMailAutoPushRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_CSMailAutoPushRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_CSMailAutoPushRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_CSMailAutoPushRsp_descriptor_;
}

const Proto_CSMailAutoPushRsp& Proto_CSMailAutoPushRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_5fcs_5femail_2eproto();
  return *default_instance_;
}

Proto_CSMailAutoPushRsp* Proto_CSMailAutoPushRsp::default_instance_ = NULL;

Proto_CSMailAutoPushRsp* Proto_CSMailAutoPushRsp::New() const {
  return new Proto_CSMailAutoPushRsp;
}

void Proto_CSMailAutoPushRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    all_count_ = 0;
    no_read_count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_CSMailAutoPushRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 all_count = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &all_count_)));
          set_has_all_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_no_read_count;
        break;
      }

      // optional int32 no_read_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_no_read_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_read_count_)));
          set_has_no_read_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_CSMailAutoPushRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 all_count = 1;
  if (has_all_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->all_count(), output);
  }

  // optional int32 no_read_count = 2;
  if (has_no_read_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->no_read_count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_CSMailAutoPushRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 all_count = 1;
  if (has_all_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->all_count(), target);
  }

  // optional int32 no_read_count = 2;
  if (has_no_read_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->no_read_count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_CSMailAutoPushRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 all_count = 1;
    if (has_all_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->all_count());
    }

    // optional int32 no_read_count = 2;
    if (has_no_read_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_read_count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_CSMailAutoPushRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_CSMailAutoPushRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_CSMailAutoPushRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_CSMailAutoPushRsp::MergeFrom(const Proto_CSMailAutoPushRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_all_count()) {
      set_all_count(from.all_count());
    }
    if (from.has_no_read_count()) {
      set_no_read_count(from.no_read_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_CSMailAutoPushRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_CSMailAutoPushRsp::CopyFrom(const Proto_CSMailAutoPushRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_CSMailAutoPushRsp::IsInitialized() const {

  return true;
}

void Proto_CSMailAutoPushRsp::Swap(Proto_CSMailAutoPushRsp* other) {
  if (other != this) {
    std::swap(all_count_, other->all_count_);
    std::swap(no_read_count_, other->no_read_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_CSMailAutoPushRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_CSMailAutoPushRsp_descriptor_;
  metadata.reflection = Proto_CSMailAutoPushRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_email

// @@protoc_insertion_point(global_scope)
