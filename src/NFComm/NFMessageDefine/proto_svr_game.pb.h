// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_svr_game.proto

#ifndef PROTOBUF_proto_5fsvr_5fgame_2eproto__INCLUDED
#define PROTOBUF_proto_5fsvr_5fgame_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "proto_common.pb.h"
#include "proto_cs_game.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

class Proto_GameTSns_GamePlayerAchInfoReq;
class Proto_GameTSns_GameRoomStatInfoReq;
class Proto_GameTSns_WriteBackUserManagerInfo;
class Proto_GameTSns_FinishGMCtrlGiveData;
class Proto_SnsTGame_SetUserManagerInfo;
class Proto_SnsTGame_SetGmCtrlGiveData;
class NotifyLogicPlayerEnterGame;
class NotifyLogicPlayerExitGame;
class NotifySnsPlayerEnterGame;
class NotifySnsPlayerExitGame;
class Proto_QueryCoinBalanceReq;
class Proto_QueryCoinBalanceRsp;
class Proto_UpdateCoinBalanceNotify;
class Proto_UpdateJettonReq;
class Proto_UpdateJettonRsp;
class Proto_NotifyServerPlayerExitGame;
class GameRoomRegReq;
class GameRoomUnRegReq;
class GameRoomUpdateOnlineCountReq;
class GameRoomLoginReq;
class GameRoomLoginRsp;
class ClearAllGamePlayerNotify;
class GameServerDumpNotify;
class Proto_LTSRedeemCodeReq;
class Proto_STLRedeemCodeRsp;

enum Proto_GameSvrMsgID {
  NF_GTW_ROOM_REGISTER_REQ = 220,
  NF_GTW_ROOM_REGISTER_RSP = 221,
  NF_GTW_ROOM_UNREGISTER_REQ = 222,
  NF_GTW_ROOM_UNREGISTER_RSP = 223,
  NF_GTW_ROOM_UPDATE_ONLINE_COUNT_REQ = 224,
  NF_GTW_ROOM_UPDATE_ONLINE_COUNT_RSP = 225,
  NF_WTG_LOGIN_ROOM_REQ = 226,
  NF_GTW_LOGIN_ROOM_RSP = 227,
  E_GTL_UPDATE_JETTON_REQ = 250,
  E_LTG_UPDATE_JETTON_RSP = 251,
  E_LTW_UPDATE_JETTON_NOTIFY = 252,
  E_WTL_NOTIFY_PLAYER_ENTER_GAME = 253,
  E_WTL_NOTIFY_PLAYER_EXIT_GAME = 254,
  E_GTL_COIN_QUERY_BALANCE_REQ = 255,
  E_GTL_COIN_QUERY_BALANCE_RPS = 256,
  E_STS_GAME_PLAYER_LEAVE_GAME = 257,
  E_STS_CLEAR_ALL_GAME_PLAYER_NOTIFY = 258,
  E_STS_GAME_SERVER_DUMP_NOTIFY = 259,
  E_LTSns_NOTIFY_PLAYER_ENTER_GAME = 260,
  E_LTSns_NOTIFY_PLAYER_EXIT_GAME = 261,
  E_SnsTGame_SET_USER_MANAGER_INFO = 262,
  E_GameTSns_WRITE_BACK_USER_MANAGER_IFNO = 263,
  E_WorldTSns_GAME_ROOM_REG_NOTIFY = 264,
  E_GameTSns_GAME_ROOM_STAT_INFO_SEND = 265,
  E_GameTSns_GAME_PLAYER_ACH_INFO_SEND = 267,
  E_LogicTGame_UPDATE_PLAYER_COINBALANCE = 268,
  E_SnsTGame_SET_GM_CTRL_GIVE_DATA = 269,
  E_GameTSns_FINISH_GM_CTRL_GIVE_DATA = 270,
  E_LTS_RedeemCodeReq = 271,
  E_STL_RedeemCodeRsp = 272
};
bool Proto_GameSvrMsgID_IsValid(int value);
const Proto_GameSvrMsgID Proto_GameSvrMsgID_MIN = NF_GTW_ROOM_REGISTER_REQ;
const Proto_GameSvrMsgID Proto_GameSvrMsgID_MAX = E_STL_RedeemCodeRsp;
const int Proto_GameSvrMsgID_ARRAYSIZE = Proto_GameSvrMsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* Proto_GameSvrMsgID_descriptor();
inline const ::std::string& Proto_GameSvrMsgID_Name(Proto_GameSvrMsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    Proto_GameSvrMsgID_descriptor(), value);
}
inline bool Proto_GameSvrMsgID_Parse(
    const ::std::string& name, Proto_GameSvrMsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Proto_GameSvrMsgID>(
    Proto_GameSvrMsgID_descriptor(), name, value);
}
// ===================================================================

class Proto_GameTSns_GamePlayerAchInfoReq : public ::google::protobuf::Message {
 public:
  Proto_GameTSns_GamePlayerAchInfoReq();
  virtual ~Proto_GameTSns_GamePlayerAchInfoReq();

  Proto_GameTSns_GamePlayerAchInfoReq(const Proto_GameTSns_GamePlayerAchInfoReq& from);

  inline Proto_GameTSns_GamePlayerAchInfoReq& operator=(const Proto_GameTSns_GamePlayerAchInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_GameTSns_GamePlayerAchInfoReq& default_instance();

  void Swap(Proto_GameTSns_GamePlayerAchInfoReq* other);

  // implements Message ----------------------------------------------

  Proto_GameTSns_GamePlayerAchInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_GameTSns_GamePlayerAchInfoReq& from);
  void MergeFrom(const Proto_GameTSns_GamePlayerAchInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional .proto_ff.GamePlayerAchievementData ach_data = 2;
  inline bool has_ach_data() const;
  inline void clear_ach_data();
  static const int kAchDataFieldNumber = 2;
  inline const ::proto_ff::GamePlayerAchievementData& ach_data() const;
  inline ::proto_ff::GamePlayerAchievementData* mutable_ach_data();
  inline ::proto_ff::GamePlayerAchievementData* release_ach_data();
  inline void set_allocated_ach_data(::proto_ff::GamePlayerAchievementData* ach_data);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_GameTSns_GamePlayerAchInfoReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_ach_data();
  inline void clear_has_ach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::proto_ff::GamePlayerAchievementData* ach_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static Proto_GameTSns_GamePlayerAchInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_GameTSns_GameRoomStatInfoReq : public ::google::protobuf::Message {
 public:
  Proto_GameTSns_GameRoomStatInfoReq();
  virtual ~Proto_GameTSns_GameRoomStatInfoReq();

  Proto_GameTSns_GameRoomStatInfoReq(const Proto_GameTSns_GameRoomStatInfoReq& from);

  inline Proto_GameTSns_GameRoomStatInfoReq& operator=(const Proto_GameTSns_GameRoomStatInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_GameTSns_GameRoomStatInfoReq& default_instance();

  void Swap(Proto_GameTSns_GameRoomStatInfoReq* other);

  // implements Message ----------------------------------------------

  Proto_GameTSns_GameRoomStatInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_GameTSns_GameRoomStatInfoReq& from);
  void MergeFrom(const Proto_GameTSns_GameRoomStatInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 game_id = 1;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  inline ::google::protobuf::uint64 game_id() const;
  inline void set_game_id(::google::protobuf::uint64 value);

  // optional uint64 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint64 room_id() const;
  inline void set_room_id(::google::protobuf::uint64 value);

  // optional bool is_exe_scene = 3;
  inline bool has_is_exe_scene() const;
  inline void clear_is_exe_scene();
  static const int kIsExeSceneFieldNumber = 3;
  inline bool is_exe_scene() const;
  inline void set_is_exe_scene(bool value);

  // optional .proto_ff.GameRoomStat stat_info = 4;
  inline bool has_stat_info() const;
  inline void clear_stat_info();
  static const int kStatInfoFieldNumber = 4;
  inline const ::proto_ff::GameRoomStat& stat_info() const;
  inline ::proto_ff::GameRoomStat* mutable_stat_info();
  inline ::proto_ff::GameRoomStat* release_stat_info();
  inline void set_allocated_stat_info(::proto_ff::GameRoomStat* stat_info);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_GameTSns_GameRoomStatInfoReq)
 private:
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_is_exe_scene();
  inline void clear_has_is_exe_scene();
  inline void set_has_stat_info();
  inline void clear_has_stat_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 game_id_;
  ::google::protobuf::uint64 room_id_;
  ::proto_ff::GameRoomStat* stat_info_;
  bool is_exe_scene_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static Proto_GameTSns_GameRoomStatInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_GameTSns_WriteBackUserManagerInfo : public ::google::protobuf::Message {
 public:
  Proto_GameTSns_WriteBackUserManagerInfo();
  virtual ~Proto_GameTSns_WriteBackUserManagerInfo();

  Proto_GameTSns_WriteBackUserManagerInfo(const Proto_GameTSns_WriteBackUserManagerInfo& from);

  inline Proto_GameTSns_WriteBackUserManagerInfo& operator=(const Proto_GameTSns_WriteBackUserManagerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_GameTSns_WriteBackUserManagerInfo& default_instance();

  void Swap(Proto_GameTSns_WriteBackUserManagerInfo* other);

  // implements Message ----------------------------------------------

  Proto_GameTSns_WriteBackUserManagerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_GameTSns_WriteBackUserManagerInfo& from);
  void MergeFrom(const Proto_GameTSns_WriteBackUserManagerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.tbGameUserManagerData user_manager_data = 1;
  inline bool has_user_manager_data() const;
  inline void clear_user_manager_data();
  static const int kUserManagerDataFieldNumber = 1;
  inline const ::proto_ff::tbGameUserManagerData& user_manager_data() const;
  inline ::proto_ff::tbGameUserManagerData* mutable_user_manager_data();
  inline ::proto_ff::tbGameUserManagerData* release_user_manager_data();
  inline void set_allocated_user_manager_data(::proto_ff::tbGameUserManagerData* user_manager_data);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_GameTSns_WriteBackUserManagerInfo)
 private:
  inline void set_has_user_manager_data();
  inline void clear_has_user_manager_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::tbGameUserManagerData* user_manager_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static Proto_GameTSns_WriteBackUserManagerInfo* default_instance_;
};
// -------------------------------------------------------------------

class Proto_GameTSns_FinishGMCtrlGiveData : public ::google::protobuf::Message {
 public:
  Proto_GameTSns_FinishGMCtrlGiveData();
  virtual ~Proto_GameTSns_FinishGMCtrlGiveData();

  Proto_GameTSns_FinishGMCtrlGiveData(const Proto_GameTSns_FinishGMCtrlGiveData& from);

  inline Proto_GameTSns_FinishGMCtrlGiveData& operator=(const Proto_GameTSns_FinishGMCtrlGiveData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_GameTSns_FinishGMCtrlGiveData& default_instance();

  void Swap(Proto_GameTSns_FinishGMCtrlGiveData* other);

  // implements Message ----------------------------------------------

  Proto_GameTSns_FinishGMCtrlGiveData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_GameTSns_FinishGMCtrlGiveData& from);
  void MergeFrom(const Proto_GameTSns_FinishGMCtrlGiveData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.tbGmCtrlGiveCtrlData gm_ctrl_data = 1;
  inline bool has_gm_ctrl_data() const;
  inline void clear_gm_ctrl_data();
  static const int kGmCtrlDataFieldNumber = 1;
  inline const ::proto_ff::tbGmCtrlGiveCtrlData& gm_ctrl_data() const;
  inline ::proto_ff::tbGmCtrlGiveCtrlData* mutable_gm_ctrl_data();
  inline ::proto_ff::tbGmCtrlGiveCtrlData* release_gm_ctrl_data();
  inline void set_allocated_gm_ctrl_data(::proto_ff::tbGmCtrlGiveCtrlData* gm_ctrl_data);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_GameTSns_FinishGMCtrlGiveData)
 private:
  inline void set_has_gm_ctrl_data();
  inline void clear_has_gm_ctrl_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::tbGmCtrlGiveCtrlData* gm_ctrl_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static Proto_GameTSns_FinishGMCtrlGiveData* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SnsTGame_SetUserManagerInfo : public ::google::protobuf::Message {
 public:
  Proto_SnsTGame_SetUserManagerInfo();
  virtual ~Proto_SnsTGame_SetUserManagerInfo();

  Proto_SnsTGame_SetUserManagerInfo(const Proto_SnsTGame_SetUserManagerInfo& from);

  inline Proto_SnsTGame_SetUserManagerInfo& operator=(const Proto_SnsTGame_SetUserManagerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SnsTGame_SetUserManagerInfo& default_instance();

  void Swap(Proto_SnsTGame_SetUserManagerInfo* other);

  // implements Message ----------------------------------------------

  Proto_SnsTGame_SetUserManagerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SnsTGame_SetUserManagerInfo& from);
  void MergeFrom(const Proto_SnsTGame_SetUserManagerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional .proto_ff.tbGameUserManagerData user_manager_data = 2;
  inline bool has_user_manager_data() const;
  inline void clear_user_manager_data();
  static const int kUserManagerDataFieldNumber = 2;
  inline const ::proto_ff::tbGameUserManagerData& user_manager_data() const;
  inline ::proto_ff::tbGameUserManagerData* mutable_user_manager_data();
  inline ::proto_ff::tbGameUserManagerData* release_user_manager_data();
  inline void set_allocated_user_manager_data(::proto_ff::tbGameUserManagerData* user_manager_data);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_SnsTGame_SetUserManagerInfo)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_user_manager_data();
  inline void clear_has_user_manager_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::proto_ff::tbGameUserManagerData* user_manager_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static Proto_SnsTGame_SetUserManagerInfo* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SnsTGame_SetGmCtrlGiveData : public ::google::protobuf::Message {
 public:
  Proto_SnsTGame_SetGmCtrlGiveData();
  virtual ~Proto_SnsTGame_SetGmCtrlGiveData();

  Proto_SnsTGame_SetGmCtrlGiveData(const Proto_SnsTGame_SetGmCtrlGiveData& from);

  inline Proto_SnsTGame_SetGmCtrlGiveData& operator=(const Proto_SnsTGame_SetGmCtrlGiveData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SnsTGame_SetGmCtrlGiveData& default_instance();

  void Swap(Proto_SnsTGame_SetGmCtrlGiveData* other);

  // implements Message ----------------------------------------------

  Proto_SnsTGame_SetGmCtrlGiveData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SnsTGame_SetGmCtrlGiveData& from);
  void MergeFrom(const Proto_SnsTGame_SetGmCtrlGiveData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional .proto_ff.tbGmCtrlGiveCtrlData gm_ctrl_data = 2;
  inline bool has_gm_ctrl_data() const;
  inline void clear_gm_ctrl_data();
  static const int kGmCtrlDataFieldNumber = 2;
  inline const ::proto_ff::tbGmCtrlGiveCtrlData& gm_ctrl_data() const;
  inline ::proto_ff::tbGmCtrlGiveCtrlData* mutable_gm_ctrl_data();
  inline ::proto_ff::tbGmCtrlGiveCtrlData* release_gm_ctrl_data();
  inline void set_allocated_gm_ctrl_data(::proto_ff::tbGmCtrlGiveCtrlData* gm_ctrl_data);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_SnsTGame_SetGmCtrlGiveData)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_gm_ctrl_data();
  inline void clear_has_gm_ctrl_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::proto_ff::tbGmCtrlGiveCtrlData* gm_ctrl_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static Proto_SnsTGame_SetGmCtrlGiveData* default_instance_;
};
// -------------------------------------------------------------------

class NotifyLogicPlayerEnterGame : public ::google::protobuf::Message {
 public:
  NotifyLogicPlayerEnterGame();
  virtual ~NotifyLogicPlayerEnterGame();

  NotifyLogicPlayerEnterGame(const NotifyLogicPlayerEnterGame& from);

  inline NotifyLogicPlayerEnterGame& operator=(const NotifyLogicPlayerEnterGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyLogicPlayerEnterGame& default_instance();

  void Swap(NotifyLogicPlayerEnterGame* other);

  // implements Message ----------------------------------------------

  NotifyLogicPlayerEnterGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyLogicPlayerEnterGame& from);
  void MergeFrom(const NotifyLogicPlayerEnterGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 3;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 4;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 4;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyLogicPlayerEnterGame)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static NotifyLogicPlayerEnterGame* default_instance_;
};
// -------------------------------------------------------------------

class NotifyLogicPlayerExitGame : public ::google::protobuf::Message {
 public:
  NotifyLogicPlayerExitGame();
  virtual ~NotifyLogicPlayerExitGame();

  NotifyLogicPlayerExitGame(const NotifyLogicPlayerExitGame& from);

  inline NotifyLogicPlayerExitGame& operator=(const NotifyLogicPlayerExitGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyLogicPlayerExitGame& default_instance();

  void Swap(NotifyLogicPlayerExitGame* other);

  // implements Message ----------------------------------------------

  NotifyLogicPlayerExitGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyLogicPlayerExitGame& from);
  void MergeFrom(const NotifyLogicPlayerExitGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifyLogicPlayerExitGame)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static NotifyLogicPlayerExitGame* default_instance_;
};
// -------------------------------------------------------------------

class NotifySnsPlayerEnterGame : public ::google::protobuf::Message {
 public:
  NotifySnsPlayerEnterGame();
  virtual ~NotifySnsPlayerEnterGame();

  NotifySnsPlayerEnterGame(const NotifySnsPlayerEnterGame& from);

  inline NotifySnsPlayerEnterGame& operator=(const NotifySnsPlayerEnterGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySnsPlayerEnterGame& default_instance();

  void Swap(NotifySnsPlayerEnterGame* other);

  // implements Message ----------------------------------------------

  NotifySnsPlayerEnterGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySnsPlayerEnterGame& from);
  void MergeFrom(const NotifySnsPlayerEnterGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 3;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 game_bus_id = 4;
  inline bool has_game_bus_id() const;
  inline void clear_game_bus_id();
  static const int kGameBusIdFieldNumber = 4;
  inline ::google::protobuf::uint32 game_bus_id() const;
  inline void set_game_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifySnsPlayerEnterGame)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_game_bus_id();
  inline void clear_has_game_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static NotifySnsPlayerEnterGame* default_instance_;
};
// -------------------------------------------------------------------

class NotifySnsPlayerExitGame : public ::google::protobuf::Message {
 public:
  NotifySnsPlayerExitGame();
  virtual ~NotifySnsPlayerExitGame();

  NotifySnsPlayerExitGame(const NotifySnsPlayerExitGame& from);

  inline NotifySnsPlayerExitGame& operator=(const NotifySnsPlayerExitGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySnsPlayerExitGame& default_instance();

  void Swap(NotifySnsPlayerExitGame* other);

  // implements Message ----------------------------------------------

  NotifySnsPlayerExitGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySnsPlayerExitGame& from);
  void MergeFrom(const NotifySnsPlayerExitGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.NotifySnsPlayerExitGame)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static NotifySnsPlayerExitGame* default_instance_;
};
// -------------------------------------------------------------------

class Proto_QueryCoinBalanceReq : public ::google::protobuf::Message {
 public:
  Proto_QueryCoinBalanceReq();
  virtual ~Proto_QueryCoinBalanceReq();

  Proto_QueryCoinBalanceReq(const Proto_QueryCoinBalanceReq& from);

  inline Proto_QueryCoinBalanceReq& operator=(const Proto_QueryCoinBalanceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_QueryCoinBalanceReq& default_instance();

  void Swap(Proto_QueryCoinBalanceReq* other);

  // implements Message ----------------------------------------------

  Proto_QueryCoinBalanceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_QueryCoinBalanceReq& from);
  void MergeFrom(const Proto_QueryCoinBalanceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_QueryCoinBalanceReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static Proto_QueryCoinBalanceReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_QueryCoinBalanceRsp : public ::google::protobuf::Message {
 public:
  Proto_QueryCoinBalanceRsp();
  virtual ~Proto_QueryCoinBalanceRsp();

  Proto_QueryCoinBalanceRsp(const Proto_QueryCoinBalanceRsp& from);

  inline Proto_QueryCoinBalanceRsp& operator=(const Proto_QueryCoinBalanceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_QueryCoinBalanceRsp& default_instance();

  void Swap(Proto_QueryCoinBalanceRsp* other);

  // implements Message ----------------------------------------------

  Proto_QueryCoinBalanceRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_QueryCoinBalanceRsp& from);
  void MergeFrom(const Proto_QueryCoinBalanceRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .proto_ff.GamePlayerDetailData player_detail = 2;
  inline bool has_player_detail() const;
  inline void clear_player_detail();
  static const int kPlayerDetailFieldNumber = 2;
  inline const ::proto_ff::GamePlayerDetailData& player_detail() const;
  inline ::proto_ff::GamePlayerDetailData* mutable_player_detail();
  inline ::proto_ff::GamePlayerDetailData* release_player_detail();
  inline void set_allocated_player_detail(::proto_ff::GamePlayerDetailData* player_detail);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_QueryCoinBalanceRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_player_detail();
  inline void clear_has_player_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GamePlayerDetailData* player_detail_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static Proto_QueryCoinBalanceRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_UpdateCoinBalanceNotify : public ::google::protobuf::Message {
 public:
  Proto_UpdateCoinBalanceNotify();
  virtual ~Proto_UpdateCoinBalanceNotify();

  Proto_UpdateCoinBalanceNotify(const Proto_UpdateCoinBalanceNotify& from);

  inline Proto_UpdateCoinBalanceNotify& operator=(const Proto_UpdateCoinBalanceNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_UpdateCoinBalanceNotify& default_instance();

  void Swap(Proto_UpdateCoinBalanceNotify* other);

  // implements Message ----------------------------------------------

  Proto_UpdateCoinBalanceNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_UpdateCoinBalanceNotify& from);
  void MergeFrom(const Proto_UpdateCoinBalanceNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.GamePlayerDetailData player_detail = 1;
  inline bool has_player_detail() const;
  inline void clear_player_detail();
  static const int kPlayerDetailFieldNumber = 1;
  inline const ::proto_ff::GamePlayerDetailData& player_detail() const;
  inline ::proto_ff::GamePlayerDetailData* mutable_player_detail();
  inline ::proto_ff::GamePlayerDetailData* release_player_detail();
  inline void set_allocated_player_detail(::proto_ff::GamePlayerDetailData* player_detail);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_UpdateCoinBalanceNotify)
 private:
  inline void set_has_player_detail();
  inline void clear_has_player_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GamePlayerDetailData* player_detail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static Proto_UpdateCoinBalanceNotify* default_instance_;
};
// -------------------------------------------------------------------

class Proto_UpdateJettonReq : public ::google::protobuf::Message {
 public:
  Proto_UpdateJettonReq();
  virtual ~Proto_UpdateJettonReq();

  Proto_UpdateJettonReq(const Proto_UpdateJettonReq& from);

  inline Proto_UpdateJettonReq& operator=(const Proto_UpdateJettonReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_UpdateJettonReq& default_instance();

  void Swap(Proto_UpdateJettonReq* other);

  // implements Message ----------------------------------------------

  Proto_UpdateJettonReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_UpdateJettonReq& from);
  void MergeFrom(const Proto_UpdateJettonReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 3;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 desk_id = 4;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 4;
  inline ::google::protobuf::uint32 desk_id() const;
  inline void set_desk_id(::google::protobuf::uint32 value);

  // optional uint32 chair_id = 5;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 5;
  inline ::google::protobuf::uint32 chair_id() const;
  inline void set_chair_id(::google::protobuf::uint32 value);

  // optional uint32 account_type = 6;
  inline bool has_account_type() const;
  inline void clear_account_type();
  static const int kAccountTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 account_type() const;
  inline void set_account_type(::google::protobuf::uint32 value);

  // optional uint32 opt_type = 7;
  inline bool has_opt_type() const;
  inline void clear_opt_type();
  static const int kOptTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 opt_type() const;
  inline void set_opt_type(::google::protobuf::uint32 value);

  // optional uint32 opt_reason = 8;
  inline bool has_opt_reason() const;
  inline void clear_opt_reason();
  static const int kOptReasonFieldNumber = 8;
  inline ::google::protobuf::uint32 opt_reason() const;
  inline void set_opt_reason(::google::protobuf::uint32 value);

  // optional uint32 change_type = 9;
  inline bool has_change_type() const;
  inline void clear_change_type();
  static const int kChangeTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 change_type() const;
  inline void set_change_type(::google::protobuf::uint32 value);

  // optional int64 money_change = 10;
  inline bool has_money_change() const;
  inline void clear_money_change();
  static const int kMoneyChangeFieldNumber = 10;
  inline ::google::protobuf::int64 money_change() const;
  inline void set_money_change(::google::protobuf::int64 value);

  // optional uint32 time = 11;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional bool add_or_deduce = 12;
  inline bool has_add_or_deduce() const;
  inline void clear_add_or_deduce();
  static const int kAddOrDeduceFieldNumber = 12;
  inline bool add_or_deduce() const;
  inline void set_add_or_deduce(bool value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_UpdateJettonReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_chair_id();
  inline void clear_has_chair_id();
  inline void set_has_account_type();
  inline void clear_has_account_type();
  inline void set_has_opt_type();
  inline void clear_has_opt_type();
  inline void set_has_opt_reason();
  inline void clear_has_opt_reason();
  inline void set_has_change_type();
  inline void clear_has_change_type();
  inline void set_has_money_change();
  inline void clear_has_money_change();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_add_or_deduce();
  inline void clear_has_add_or_deduce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 desk_id_;
  ::google::protobuf::uint32 chair_id_;
  ::google::protobuf::uint32 account_type_;
  ::google::protobuf::uint32 opt_type_;
  ::google::protobuf::uint32 opt_reason_;
  ::google::protobuf::uint32 change_type_;
  ::google::protobuf::int64 money_change_;
  ::google::protobuf::uint32 time_;
  bool add_or_deduce_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static Proto_UpdateJettonReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_UpdateJettonRsp : public ::google::protobuf::Message {
 public:
  Proto_UpdateJettonRsp();
  virtual ~Proto_UpdateJettonRsp();

  Proto_UpdateJettonRsp(const Proto_UpdateJettonRsp& from);

  inline Proto_UpdateJettonRsp& operator=(const Proto_UpdateJettonRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_UpdateJettonRsp& default_instance();

  void Swap(Proto_UpdateJettonRsp* other);

  // implements Message ----------------------------------------------

  Proto_UpdateJettonRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_UpdateJettonRsp& from);
  void MergeFrom(const Proto_UpdateJettonRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional uint64 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional int64 money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::int64 money() const;
  inline void set_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_UpdateJettonRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_money();
  inline void clear_has_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static Proto_UpdateJettonRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_NotifyServerPlayerExitGame : public ::google::protobuf::Message {
 public:
  Proto_NotifyServerPlayerExitGame();
  virtual ~Proto_NotifyServerPlayerExitGame();

  Proto_NotifyServerPlayerExitGame(const Proto_NotifyServerPlayerExitGame& from);

  inline Proto_NotifyServerPlayerExitGame& operator=(const Proto_NotifyServerPlayerExitGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_NotifyServerPlayerExitGame& default_instance();

  void Swap(Proto_NotifyServerPlayerExitGame* other);

  // implements Message ----------------------------------------------

  Proto_NotifyServerPlayerExitGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_NotifyServerPlayerExitGame& from);
  void MergeFrom(const Proto_NotifyServerPlayerExitGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 3;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 desk_id = 4;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 4;
  inline ::google::protobuf::uint32 desk_id() const;
  inline void set_desk_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_NotifyServerPlayerExitGame)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_desk_id();
  inline void clear_has_desk_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 desk_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static Proto_NotifyServerPlayerExitGame* default_instance_;
};
// -------------------------------------------------------------------

class GameRoomRegReq : public ::google::protobuf::Message {
 public:
  GameRoomRegReq();
  virtual ~GameRoomRegReq();

  GameRoomRegReq(const GameRoomRegReq& from);

  inline GameRoomRegReq& operator=(const GameRoomRegReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameRoomRegReq& default_instance();

  void Swap(GameRoomRegReq* other);

  // implements Message ----------------------------------------------

  GameRoomRegReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameRoomRegReq& from);
  void MergeFrom(const GameRoomRegReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.GameServerRoomInfo room_info = 1;
  inline bool has_room_info() const;
  inline void clear_room_info();
  static const int kRoomInfoFieldNumber = 1;
  inline const ::proto_ff::GameServerRoomInfo& room_info() const;
  inline ::proto_ff::GameServerRoomInfo* mutable_room_info();
  inline ::proto_ff::GameServerRoomInfo* release_room_info();
  inline void set_allocated_room_info(::proto_ff::GameServerRoomInfo* room_info);

  // @@protoc_insertion_point(class_scope:proto_ff.GameRoomRegReq)
 private:
  inline void set_has_room_info();
  inline void clear_has_room_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GameServerRoomInfo* room_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static GameRoomRegReq* default_instance_;
};
// -------------------------------------------------------------------

class GameRoomUnRegReq : public ::google::protobuf::Message {
 public:
  GameRoomUnRegReq();
  virtual ~GameRoomUnRegReq();

  GameRoomUnRegReq(const GameRoomUnRegReq& from);

  inline GameRoomUnRegReq& operator=(const GameRoomUnRegReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameRoomUnRegReq& default_instance();

  void Swap(GameRoomUnRegReq* other);

  // implements Message ----------------------------------------------

  GameRoomUnRegReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameRoomUnRegReq& from);
  void MergeFrom(const GameRoomUnRegReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.GameServerRoomInfo room_info = 1;
  inline bool has_room_info() const;
  inline void clear_room_info();
  static const int kRoomInfoFieldNumber = 1;
  inline const ::proto_ff::GameServerRoomInfo& room_info() const;
  inline ::proto_ff::GameServerRoomInfo* mutable_room_info();
  inline ::proto_ff::GameServerRoomInfo* release_room_info();
  inline void set_allocated_room_info(::proto_ff::GameServerRoomInfo* room_info);

  // @@protoc_insertion_point(class_scope:proto_ff.GameRoomUnRegReq)
 private:
  inline void set_has_room_info();
  inline void clear_has_room_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GameServerRoomInfo* room_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static GameRoomUnRegReq* default_instance_;
};
// -------------------------------------------------------------------

class GameRoomUpdateOnlineCountReq : public ::google::protobuf::Message {
 public:
  GameRoomUpdateOnlineCountReq();
  virtual ~GameRoomUpdateOnlineCountReq();

  GameRoomUpdateOnlineCountReq(const GameRoomUpdateOnlineCountReq& from);

  inline GameRoomUpdateOnlineCountReq& operator=(const GameRoomUpdateOnlineCountReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameRoomUpdateOnlineCountReq& default_instance();

  void Swap(GameRoomUpdateOnlineCountReq* other);

  // implements Message ----------------------------------------------

  GameRoomUpdateOnlineCountReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameRoomUpdateOnlineCountReq& from);
  void MergeFrom(const GameRoomUpdateOnlineCountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.GameServerRoomInfo room_info = 1;
  inline bool has_room_info() const;
  inline void clear_room_info();
  static const int kRoomInfoFieldNumber = 1;
  inline const ::proto_ff::GameServerRoomInfo& room_info() const;
  inline ::proto_ff::GameServerRoomInfo* mutable_room_info();
  inline ::proto_ff::GameServerRoomInfo* release_room_info();
  inline void set_allocated_room_info(::proto_ff::GameServerRoomInfo* room_info);

  // @@protoc_insertion_point(class_scope:proto_ff.GameRoomUpdateOnlineCountReq)
 private:
  inline void set_has_room_info();
  inline void clear_has_room_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::GameServerRoomInfo* room_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static GameRoomUpdateOnlineCountReq* default_instance_;
};
// -------------------------------------------------------------------

class GameRoomLoginReq : public ::google::protobuf::Message {
 public:
  GameRoomLoginReq();
  virtual ~GameRoomLoginReq();

  GameRoomLoginReq(const GameRoomLoginReq& from);

  inline GameRoomLoginReq& operator=(const GameRoomLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameRoomLoginReq& default_instance();

  void Swap(GameRoomLoginReq* other);

  // implements Message ----------------------------------------------

  GameRoomLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameRoomLoginReq& from);
  void MergeFrom(const GameRoomLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_id = 1;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint64 player_id = 3;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 3;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 proxy_id = 4;
  inline bool has_proxy_id() const;
  inline void clear_proxy_id();
  static const int kProxyIdFieldNumber = 4;
  inline ::google::protobuf::uint32 proxy_id() const;
  inline void set_proxy_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GameRoomLoginReq)
 private:
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_proxy_id();
  inline void clear_has_proxy_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 proxy_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static GameRoomLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class GameRoomLoginRsp : public ::google::protobuf::Message {
 public:
  GameRoomLoginRsp();
  virtual ~GameRoomLoginRsp();

  GameRoomLoginRsp(const GameRoomLoginRsp& from);

  inline GameRoomLoginRsp& operator=(const GameRoomLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameRoomLoginRsp& default_instance();

  void Swap(GameRoomLoginRsp* other);

  // implements Message ----------------------------------------------

  GameRoomLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameRoomLoginRsp& from);
  void MergeFrom(const GameRoomLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GameRoomLoginRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static GameRoomLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class ClearAllGamePlayerNotify : public ::google::protobuf::Message {
 public:
  ClearAllGamePlayerNotify();
  virtual ~ClearAllGamePlayerNotify();

  ClearAllGamePlayerNotify(const ClearAllGamePlayerNotify& from);

  inline ClearAllGamePlayerNotify& operator=(const ClearAllGamePlayerNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClearAllGamePlayerNotify& default_instance();

  void Swap(ClearAllGamePlayerNotify* other);

  // implements Message ----------------------------------------------

  ClearAllGamePlayerNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClearAllGamePlayerNotify& from);
  void MergeFrom(const ClearAllGamePlayerNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto_ff.ClearAllGamePlayerNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static ClearAllGamePlayerNotify* default_instance_;
};
// -------------------------------------------------------------------

class GameServerDumpNotify : public ::google::protobuf::Message {
 public:
  GameServerDumpNotify();
  virtual ~GameServerDumpNotify();

  GameServerDumpNotify(const GameServerDumpNotify& from);

  inline GameServerDumpNotify& operator=(const GameServerDumpNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameServerDumpNotify& default_instance();

  void Swap(GameServerDumpNotify* other);

  // implements Message ----------------------------------------------

  GameServerDumpNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameServerDumpNotify& from);
  void MergeFrom(const GameServerDumpNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_id = 1;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);

  // optional uint32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 bus_id = 3;
  inline bool has_bus_id() const;
  inline void clear_bus_id();
  static const int kBusIdFieldNumber = 3;
  inline ::google::protobuf::uint32 bus_id() const;
  inline void set_bus_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.GameServerDumpNotify)
 private:
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_bus_id();
  inline void clear_has_bus_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 bus_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static GameServerDumpNotify* default_instance_;
};
// -------------------------------------------------------------------

class Proto_LTSRedeemCodeReq : public ::google::protobuf::Message {
 public:
  Proto_LTSRedeemCodeReq();
  virtual ~Proto_LTSRedeemCodeReq();

  Proto_LTSRedeemCodeReq(const Proto_LTSRedeemCodeReq& from);

  inline Proto_LTSRedeemCodeReq& operator=(const Proto_LTSRedeemCodeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_LTSRedeemCodeReq& default_instance();

  void Swap(Proto_LTSRedeemCodeReq* other);

  // implements Message ----------------------------------------------

  Proto_LTSRedeemCodeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_LTSRedeemCodeReq& from);
  void MergeFrom(const Proto_LTSRedeemCodeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_LTSRedeemCodeReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* id_;
  ::google::protobuf::uint64 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static Proto_LTSRedeemCodeReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_STLRedeemCodeRsp : public ::google::protobuf::Message {
 public:
  Proto_STLRedeemCodeRsp();
  virtual ~Proto_STLRedeemCodeRsp();

  Proto_STLRedeemCodeRsp(const Proto_STLRedeemCodeRsp& from);

  inline Proto_STLRedeemCodeRsp& operator=(const Proto_STLRedeemCodeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_STLRedeemCodeRsp& default_instance();

  void Swap(Proto_STLRedeemCodeRsp* other);

  // implements Message ----------------------------------------------

  Proto_STLRedeemCodeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_STLRedeemCodeRsp& from);
  void MergeFrom(const Proto_STLRedeemCodeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // optional uint64 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 add_gold = 4;
  inline bool has_add_gold() const;
  inline void clear_add_gold();
  static const int kAddGoldFieldNumber = 4;
  inline ::google::protobuf::uint64 add_gold() const;
  inline void set_add_gold(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_STLRedeemCodeRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_add_gold();
  inline void clear_has_add_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* id_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 add_gold_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5fgame_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5fgame_2eproto();

  void InitAsDefaultInstance();
  static Proto_STLRedeemCodeRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// Proto_GameTSns_GamePlayerAchInfoReq

// optional uint64 user_id = 1;
inline bool Proto_GameTSns_GamePlayerAchInfoReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_GameTSns_GamePlayerAchInfoReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_GameTSns_GamePlayerAchInfoReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_GameTSns_GamePlayerAchInfoReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_GameTSns_GamePlayerAchInfoReq::user_id() const {
  return user_id_;
}
inline void Proto_GameTSns_GamePlayerAchInfoReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional .proto_ff.GamePlayerAchievementData ach_data = 2;
inline bool Proto_GameTSns_GamePlayerAchInfoReq::has_ach_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_GameTSns_GamePlayerAchInfoReq::set_has_ach_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_GameTSns_GamePlayerAchInfoReq::clear_has_ach_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_GameTSns_GamePlayerAchInfoReq::clear_ach_data() {
  if (ach_data_ != NULL) ach_data_->::proto_ff::GamePlayerAchievementData::Clear();
  clear_has_ach_data();
}
inline const ::proto_ff::GamePlayerAchievementData& Proto_GameTSns_GamePlayerAchInfoReq::ach_data() const {
  return ach_data_ != NULL ? *ach_data_ : *default_instance_->ach_data_;
}
inline ::proto_ff::GamePlayerAchievementData* Proto_GameTSns_GamePlayerAchInfoReq::mutable_ach_data() {
  set_has_ach_data();
  if (ach_data_ == NULL) ach_data_ = new ::proto_ff::GamePlayerAchievementData;
  return ach_data_;
}
inline ::proto_ff::GamePlayerAchievementData* Proto_GameTSns_GamePlayerAchInfoReq::release_ach_data() {
  clear_has_ach_data();
  ::proto_ff::GamePlayerAchievementData* temp = ach_data_;
  ach_data_ = NULL;
  return temp;
}
inline void Proto_GameTSns_GamePlayerAchInfoReq::set_allocated_ach_data(::proto_ff::GamePlayerAchievementData* ach_data) {
  delete ach_data_;
  ach_data_ = ach_data;
  if (ach_data) {
    set_has_ach_data();
  } else {
    clear_has_ach_data();
  }
}

// -------------------------------------------------------------------

// Proto_GameTSns_GameRoomStatInfoReq

// optional uint64 game_id = 1;
inline bool Proto_GameTSns_GameRoomStatInfoReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::clear_game_id() {
  game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_game_id();
}
inline ::google::protobuf::uint64 Proto_GameTSns_GameRoomStatInfoReq::game_id() const {
  return game_id_;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::set_game_id(::google::protobuf::uint64 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint64 room_id = 2;
inline bool Proto_GameTSns_GameRoomStatInfoReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
  clear_has_room_id();
}
inline ::google::protobuf::uint64 Proto_GameTSns_GameRoomStatInfoReq::room_id() const {
  return room_id_;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::set_room_id(::google::protobuf::uint64 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional bool is_exe_scene = 3;
inline bool Proto_GameTSns_GameRoomStatInfoReq::has_is_exe_scene() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::set_has_is_exe_scene() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::clear_has_is_exe_scene() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::clear_is_exe_scene() {
  is_exe_scene_ = false;
  clear_has_is_exe_scene();
}
inline bool Proto_GameTSns_GameRoomStatInfoReq::is_exe_scene() const {
  return is_exe_scene_;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::set_is_exe_scene(bool value) {
  set_has_is_exe_scene();
  is_exe_scene_ = value;
}

// optional .proto_ff.GameRoomStat stat_info = 4;
inline bool Proto_GameTSns_GameRoomStatInfoReq::has_stat_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::set_has_stat_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::clear_has_stat_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::clear_stat_info() {
  if (stat_info_ != NULL) stat_info_->::proto_ff::GameRoomStat::Clear();
  clear_has_stat_info();
}
inline const ::proto_ff::GameRoomStat& Proto_GameTSns_GameRoomStatInfoReq::stat_info() const {
  return stat_info_ != NULL ? *stat_info_ : *default_instance_->stat_info_;
}
inline ::proto_ff::GameRoomStat* Proto_GameTSns_GameRoomStatInfoReq::mutable_stat_info() {
  set_has_stat_info();
  if (stat_info_ == NULL) stat_info_ = new ::proto_ff::GameRoomStat;
  return stat_info_;
}
inline ::proto_ff::GameRoomStat* Proto_GameTSns_GameRoomStatInfoReq::release_stat_info() {
  clear_has_stat_info();
  ::proto_ff::GameRoomStat* temp = stat_info_;
  stat_info_ = NULL;
  return temp;
}
inline void Proto_GameTSns_GameRoomStatInfoReq::set_allocated_stat_info(::proto_ff::GameRoomStat* stat_info) {
  delete stat_info_;
  stat_info_ = stat_info;
  if (stat_info) {
    set_has_stat_info();
  } else {
    clear_has_stat_info();
  }
}

// -------------------------------------------------------------------

// Proto_GameTSns_WriteBackUserManagerInfo

// optional .proto_ff.tbGameUserManagerData user_manager_data = 1;
inline bool Proto_GameTSns_WriteBackUserManagerInfo::has_user_manager_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_GameTSns_WriteBackUserManagerInfo::set_has_user_manager_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_GameTSns_WriteBackUserManagerInfo::clear_has_user_manager_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_GameTSns_WriteBackUserManagerInfo::clear_user_manager_data() {
  if (user_manager_data_ != NULL) user_manager_data_->::proto_ff::tbGameUserManagerData::Clear();
  clear_has_user_manager_data();
}
inline const ::proto_ff::tbGameUserManagerData& Proto_GameTSns_WriteBackUserManagerInfo::user_manager_data() const {
  return user_manager_data_ != NULL ? *user_manager_data_ : *default_instance_->user_manager_data_;
}
inline ::proto_ff::tbGameUserManagerData* Proto_GameTSns_WriteBackUserManagerInfo::mutable_user_manager_data() {
  set_has_user_manager_data();
  if (user_manager_data_ == NULL) user_manager_data_ = new ::proto_ff::tbGameUserManagerData;
  return user_manager_data_;
}
inline ::proto_ff::tbGameUserManagerData* Proto_GameTSns_WriteBackUserManagerInfo::release_user_manager_data() {
  clear_has_user_manager_data();
  ::proto_ff::tbGameUserManagerData* temp = user_manager_data_;
  user_manager_data_ = NULL;
  return temp;
}
inline void Proto_GameTSns_WriteBackUserManagerInfo::set_allocated_user_manager_data(::proto_ff::tbGameUserManagerData* user_manager_data) {
  delete user_manager_data_;
  user_manager_data_ = user_manager_data;
  if (user_manager_data) {
    set_has_user_manager_data();
  } else {
    clear_has_user_manager_data();
  }
}

// -------------------------------------------------------------------

// Proto_GameTSns_FinishGMCtrlGiveData

// optional .proto_ff.tbGmCtrlGiveCtrlData gm_ctrl_data = 1;
inline bool Proto_GameTSns_FinishGMCtrlGiveData::has_gm_ctrl_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_GameTSns_FinishGMCtrlGiveData::set_has_gm_ctrl_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_GameTSns_FinishGMCtrlGiveData::clear_has_gm_ctrl_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_GameTSns_FinishGMCtrlGiveData::clear_gm_ctrl_data() {
  if (gm_ctrl_data_ != NULL) gm_ctrl_data_->::proto_ff::tbGmCtrlGiveCtrlData::Clear();
  clear_has_gm_ctrl_data();
}
inline const ::proto_ff::tbGmCtrlGiveCtrlData& Proto_GameTSns_FinishGMCtrlGiveData::gm_ctrl_data() const {
  return gm_ctrl_data_ != NULL ? *gm_ctrl_data_ : *default_instance_->gm_ctrl_data_;
}
inline ::proto_ff::tbGmCtrlGiveCtrlData* Proto_GameTSns_FinishGMCtrlGiveData::mutable_gm_ctrl_data() {
  set_has_gm_ctrl_data();
  if (gm_ctrl_data_ == NULL) gm_ctrl_data_ = new ::proto_ff::tbGmCtrlGiveCtrlData;
  return gm_ctrl_data_;
}
inline ::proto_ff::tbGmCtrlGiveCtrlData* Proto_GameTSns_FinishGMCtrlGiveData::release_gm_ctrl_data() {
  clear_has_gm_ctrl_data();
  ::proto_ff::tbGmCtrlGiveCtrlData* temp = gm_ctrl_data_;
  gm_ctrl_data_ = NULL;
  return temp;
}
inline void Proto_GameTSns_FinishGMCtrlGiveData::set_allocated_gm_ctrl_data(::proto_ff::tbGmCtrlGiveCtrlData* gm_ctrl_data) {
  delete gm_ctrl_data_;
  gm_ctrl_data_ = gm_ctrl_data;
  if (gm_ctrl_data) {
    set_has_gm_ctrl_data();
  } else {
    clear_has_gm_ctrl_data();
  }
}

// -------------------------------------------------------------------

// Proto_SnsTGame_SetUserManagerInfo

// optional uint64 player_id = 1;
inline bool Proto_SnsTGame_SetUserManagerInfo::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SnsTGame_SetUserManagerInfo::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SnsTGame_SetUserManagerInfo::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SnsTGame_SetUserManagerInfo::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_SnsTGame_SetUserManagerInfo::player_id() const {
  return player_id_;
}
inline void Proto_SnsTGame_SetUserManagerInfo::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional .proto_ff.tbGameUserManagerData user_manager_data = 2;
inline bool Proto_SnsTGame_SetUserManagerInfo::has_user_manager_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SnsTGame_SetUserManagerInfo::set_has_user_manager_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SnsTGame_SetUserManagerInfo::clear_has_user_manager_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SnsTGame_SetUserManagerInfo::clear_user_manager_data() {
  if (user_manager_data_ != NULL) user_manager_data_->::proto_ff::tbGameUserManagerData::Clear();
  clear_has_user_manager_data();
}
inline const ::proto_ff::tbGameUserManagerData& Proto_SnsTGame_SetUserManagerInfo::user_manager_data() const {
  return user_manager_data_ != NULL ? *user_manager_data_ : *default_instance_->user_manager_data_;
}
inline ::proto_ff::tbGameUserManagerData* Proto_SnsTGame_SetUserManagerInfo::mutable_user_manager_data() {
  set_has_user_manager_data();
  if (user_manager_data_ == NULL) user_manager_data_ = new ::proto_ff::tbGameUserManagerData;
  return user_manager_data_;
}
inline ::proto_ff::tbGameUserManagerData* Proto_SnsTGame_SetUserManagerInfo::release_user_manager_data() {
  clear_has_user_manager_data();
  ::proto_ff::tbGameUserManagerData* temp = user_manager_data_;
  user_manager_data_ = NULL;
  return temp;
}
inline void Proto_SnsTGame_SetUserManagerInfo::set_allocated_user_manager_data(::proto_ff::tbGameUserManagerData* user_manager_data) {
  delete user_manager_data_;
  user_manager_data_ = user_manager_data;
  if (user_manager_data) {
    set_has_user_manager_data();
  } else {
    clear_has_user_manager_data();
  }
}

// -------------------------------------------------------------------

// Proto_SnsTGame_SetGmCtrlGiveData

// optional uint64 player_id = 1;
inline bool Proto_SnsTGame_SetGmCtrlGiveData::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SnsTGame_SetGmCtrlGiveData::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SnsTGame_SetGmCtrlGiveData::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SnsTGame_SetGmCtrlGiveData::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_SnsTGame_SetGmCtrlGiveData::player_id() const {
  return player_id_;
}
inline void Proto_SnsTGame_SetGmCtrlGiveData::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional .proto_ff.tbGmCtrlGiveCtrlData gm_ctrl_data = 2;
inline bool Proto_SnsTGame_SetGmCtrlGiveData::has_gm_ctrl_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SnsTGame_SetGmCtrlGiveData::set_has_gm_ctrl_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SnsTGame_SetGmCtrlGiveData::clear_has_gm_ctrl_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SnsTGame_SetGmCtrlGiveData::clear_gm_ctrl_data() {
  if (gm_ctrl_data_ != NULL) gm_ctrl_data_->::proto_ff::tbGmCtrlGiveCtrlData::Clear();
  clear_has_gm_ctrl_data();
}
inline const ::proto_ff::tbGmCtrlGiveCtrlData& Proto_SnsTGame_SetGmCtrlGiveData::gm_ctrl_data() const {
  return gm_ctrl_data_ != NULL ? *gm_ctrl_data_ : *default_instance_->gm_ctrl_data_;
}
inline ::proto_ff::tbGmCtrlGiveCtrlData* Proto_SnsTGame_SetGmCtrlGiveData::mutable_gm_ctrl_data() {
  set_has_gm_ctrl_data();
  if (gm_ctrl_data_ == NULL) gm_ctrl_data_ = new ::proto_ff::tbGmCtrlGiveCtrlData;
  return gm_ctrl_data_;
}
inline ::proto_ff::tbGmCtrlGiveCtrlData* Proto_SnsTGame_SetGmCtrlGiveData::release_gm_ctrl_data() {
  clear_has_gm_ctrl_data();
  ::proto_ff::tbGmCtrlGiveCtrlData* temp = gm_ctrl_data_;
  gm_ctrl_data_ = NULL;
  return temp;
}
inline void Proto_SnsTGame_SetGmCtrlGiveData::set_allocated_gm_ctrl_data(::proto_ff::tbGmCtrlGiveCtrlData* gm_ctrl_data) {
  delete gm_ctrl_data_;
  gm_ctrl_data_ = gm_ctrl_data;
  if (gm_ctrl_data) {
    set_has_gm_ctrl_data();
  } else {
    clear_has_gm_ctrl_data();
  }
}

// -------------------------------------------------------------------

// NotifyLogicPlayerEnterGame

// optional uint64 player_id = 1;
inline bool NotifyLogicPlayerEnterGame::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyLogicPlayerEnterGame::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyLogicPlayerEnterGame::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyLogicPlayerEnterGame::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 NotifyLogicPlayerEnterGame::player_id() const {
  return player_id_;
}
inline void NotifyLogicPlayerEnterGame::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 game_id = 2;
inline bool NotifyLogicPlayerEnterGame::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyLogicPlayerEnterGame::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyLogicPlayerEnterGame::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyLogicPlayerEnterGame::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 NotifyLogicPlayerEnterGame::game_id() const {
  return game_id_;
}
inline void NotifyLogicPlayerEnterGame::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 3;
inline bool NotifyLogicPlayerEnterGame::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyLogicPlayerEnterGame::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyLogicPlayerEnterGame::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyLogicPlayerEnterGame::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 NotifyLogicPlayerEnterGame::room_id() const {
  return room_id_;
}
inline void NotifyLogicPlayerEnterGame::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_bus_id = 4;
inline bool NotifyLogicPlayerEnterGame::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyLogicPlayerEnterGame::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyLogicPlayerEnterGame::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyLogicPlayerEnterGame::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 NotifyLogicPlayerEnterGame::game_bus_id() const {
  return game_bus_id_;
}
inline void NotifyLogicPlayerEnterGame::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// -------------------------------------------------------------------

// NotifyLogicPlayerExitGame

// optional uint64 player_id = 1;
inline bool NotifyLogicPlayerExitGame::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyLogicPlayerExitGame::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyLogicPlayerExitGame::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyLogicPlayerExitGame::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 NotifyLogicPlayerExitGame::player_id() const {
  return player_id_;
}
inline void NotifyLogicPlayerExitGame::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// NotifySnsPlayerEnterGame

// optional uint64 player_id = 1;
inline bool NotifySnsPlayerEnterGame::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySnsPlayerEnterGame::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySnsPlayerEnterGame::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySnsPlayerEnterGame::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 NotifySnsPlayerEnterGame::player_id() const {
  return player_id_;
}
inline void NotifySnsPlayerEnterGame::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 game_id = 2;
inline bool NotifySnsPlayerEnterGame::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySnsPlayerEnterGame::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySnsPlayerEnterGame::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySnsPlayerEnterGame::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 NotifySnsPlayerEnterGame::game_id() const {
  return game_id_;
}
inline void NotifySnsPlayerEnterGame::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 3;
inline bool NotifySnsPlayerEnterGame::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifySnsPlayerEnterGame::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifySnsPlayerEnterGame::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifySnsPlayerEnterGame::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 NotifySnsPlayerEnterGame::room_id() const {
  return room_id_;
}
inline void NotifySnsPlayerEnterGame::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 game_bus_id = 4;
inline bool NotifySnsPlayerEnterGame::has_game_bus_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifySnsPlayerEnterGame::set_has_game_bus_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifySnsPlayerEnterGame::clear_has_game_bus_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifySnsPlayerEnterGame::clear_game_bus_id() {
  game_bus_id_ = 0u;
  clear_has_game_bus_id();
}
inline ::google::protobuf::uint32 NotifySnsPlayerEnterGame::game_bus_id() const {
  return game_bus_id_;
}
inline void NotifySnsPlayerEnterGame::set_game_bus_id(::google::protobuf::uint32 value) {
  set_has_game_bus_id();
  game_bus_id_ = value;
}

// -------------------------------------------------------------------

// NotifySnsPlayerExitGame

// optional uint64 player_id = 1;
inline bool NotifySnsPlayerExitGame::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySnsPlayerExitGame::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySnsPlayerExitGame::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySnsPlayerExitGame::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 NotifySnsPlayerExitGame::player_id() const {
  return player_id_;
}
inline void NotifySnsPlayerExitGame::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// Proto_QueryCoinBalanceReq

// optional uint64 player_id = 1;
inline bool Proto_QueryCoinBalanceReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_QueryCoinBalanceReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_QueryCoinBalanceReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_QueryCoinBalanceReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_QueryCoinBalanceReq::player_id() const {
  return player_id_;
}
inline void Proto_QueryCoinBalanceReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// Proto_QueryCoinBalanceRsp

// optional int32 result = 1;
inline bool Proto_QueryCoinBalanceRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_QueryCoinBalanceRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_QueryCoinBalanceRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_QueryCoinBalanceRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_QueryCoinBalanceRsp::result() const {
  return result_;
}
inline void Proto_QueryCoinBalanceRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .proto_ff.GamePlayerDetailData player_detail = 2;
inline bool Proto_QueryCoinBalanceRsp::has_player_detail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_QueryCoinBalanceRsp::set_has_player_detail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_QueryCoinBalanceRsp::clear_has_player_detail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_QueryCoinBalanceRsp::clear_player_detail() {
  if (player_detail_ != NULL) player_detail_->::proto_ff::GamePlayerDetailData::Clear();
  clear_has_player_detail();
}
inline const ::proto_ff::GamePlayerDetailData& Proto_QueryCoinBalanceRsp::player_detail() const {
  return player_detail_ != NULL ? *player_detail_ : *default_instance_->player_detail_;
}
inline ::proto_ff::GamePlayerDetailData* Proto_QueryCoinBalanceRsp::mutable_player_detail() {
  set_has_player_detail();
  if (player_detail_ == NULL) player_detail_ = new ::proto_ff::GamePlayerDetailData;
  return player_detail_;
}
inline ::proto_ff::GamePlayerDetailData* Proto_QueryCoinBalanceRsp::release_player_detail() {
  clear_has_player_detail();
  ::proto_ff::GamePlayerDetailData* temp = player_detail_;
  player_detail_ = NULL;
  return temp;
}
inline void Proto_QueryCoinBalanceRsp::set_allocated_player_detail(::proto_ff::GamePlayerDetailData* player_detail) {
  delete player_detail_;
  player_detail_ = player_detail;
  if (player_detail) {
    set_has_player_detail();
  } else {
    clear_has_player_detail();
  }
}

// -------------------------------------------------------------------

// Proto_UpdateCoinBalanceNotify

// optional .proto_ff.GamePlayerDetailData player_detail = 1;
inline bool Proto_UpdateCoinBalanceNotify::has_player_detail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_UpdateCoinBalanceNotify::set_has_player_detail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_UpdateCoinBalanceNotify::clear_has_player_detail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_UpdateCoinBalanceNotify::clear_player_detail() {
  if (player_detail_ != NULL) player_detail_->::proto_ff::GamePlayerDetailData::Clear();
  clear_has_player_detail();
}
inline const ::proto_ff::GamePlayerDetailData& Proto_UpdateCoinBalanceNotify::player_detail() const {
  return player_detail_ != NULL ? *player_detail_ : *default_instance_->player_detail_;
}
inline ::proto_ff::GamePlayerDetailData* Proto_UpdateCoinBalanceNotify::mutable_player_detail() {
  set_has_player_detail();
  if (player_detail_ == NULL) player_detail_ = new ::proto_ff::GamePlayerDetailData;
  return player_detail_;
}
inline ::proto_ff::GamePlayerDetailData* Proto_UpdateCoinBalanceNotify::release_player_detail() {
  clear_has_player_detail();
  ::proto_ff::GamePlayerDetailData* temp = player_detail_;
  player_detail_ = NULL;
  return temp;
}
inline void Proto_UpdateCoinBalanceNotify::set_allocated_player_detail(::proto_ff::GamePlayerDetailData* player_detail) {
  delete player_detail_;
  player_detail_ = player_detail;
  if (player_detail) {
    set_has_player_detail();
  } else {
    clear_has_player_detail();
  }
}

// -------------------------------------------------------------------

// Proto_UpdateJettonReq

// optional uint64 player_id = 1;
inline bool Proto_UpdateJettonReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_UpdateJettonReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_UpdateJettonReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_UpdateJettonReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_UpdateJettonReq::player_id() const {
  return player_id_;
}
inline void Proto_UpdateJettonReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 game_id = 2;
inline bool Proto_UpdateJettonReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_UpdateJettonReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_UpdateJettonReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_UpdateJettonReq::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 Proto_UpdateJettonReq::game_id() const {
  return game_id_;
}
inline void Proto_UpdateJettonReq::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 3;
inline bool Proto_UpdateJettonReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_UpdateJettonReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_UpdateJettonReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_UpdateJettonReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 Proto_UpdateJettonReq::room_id() const {
  return room_id_;
}
inline void Proto_UpdateJettonReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 desk_id = 4;
inline bool Proto_UpdateJettonReq::has_desk_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_UpdateJettonReq::set_has_desk_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_UpdateJettonReq::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_UpdateJettonReq::clear_desk_id() {
  desk_id_ = 0u;
  clear_has_desk_id();
}
inline ::google::protobuf::uint32 Proto_UpdateJettonReq::desk_id() const {
  return desk_id_;
}
inline void Proto_UpdateJettonReq::set_desk_id(::google::protobuf::uint32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional uint32 chair_id = 5;
inline bool Proto_UpdateJettonReq::has_chair_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_UpdateJettonReq::set_has_chair_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_UpdateJettonReq::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_UpdateJettonReq::clear_chair_id() {
  chair_id_ = 0u;
  clear_has_chair_id();
}
inline ::google::protobuf::uint32 Proto_UpdateJettonReq::chair_id() const {
  return chair_id_;
}
inline void Proto_UpdateJettonReq::set_chair_id(::google::protobuf::uint32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// optional uint32 account_type = 6;
inline bool Proto_UpdateJettonReq::has_account_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto_UpdateJettonReq::set_has_account_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto_UpdateJettonReq::clear_has_account_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto_UpdateJettonReq::clear_account_type() {
  account_type_ = 0u;
  clear_has_account_type();
}
inline ::google::protobuf::uint32 Proto_UpdateJettonReq::account_type() const {
  return account_type_;
}
inline void Proto_UpdateJettonReq::set_account_type(::google::protobuf::uint32 value) {
  set_has_account_type();
  account_type_ = value;
}

// optional uint32 opt_type = 7;
inline bool Proto_UpdateJettonReq::has_opt_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto_UpdateJettonReq::set_has_opt_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto_UpdateJettonReq::clear_has_opt_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto_UpdateJettonReq::clear_opt_type() {
  opt_type_ = 0u;
  clear_has_opt_type();
}
inline ::google::protobuf::uint32 Proto_UpdateJettonReq::opt_type() const {
  return opt_type_;
}
inline void Proto_UpdateJettonReq::set_opt_type(::google::protobuf::uint32 value) {
  set_has_opt_type();
  opt_type_ = value;
}

// optional uint32 opt_reason = 8;
inline bool Proto_UpdateJettonReq::has_opt_reason() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Proto_UpdateJettonReq::set_has_opt_reason() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Proto_UpdateJettonReq::clear_has_opt_reason() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Proto_UpdateJettonReq::clear_opt_reason() {
  opt_reason_ = 0u;
  clear_has_opt_reason();
}
inline ::google::protobuf::uint32 Proto_UpdateJettonReq::opt_reason() const {
  return opt_reason_;
}
inline void Proto_UpdateJettonReq::set_opt_reason(::google::protobuf::uint32 value) {
  set_has_opt_reason();
  opt_reason_ = value;
}

// optional uint32 change_type = 9;
inline bool Proto_UpdateJettonReq::has_change_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Proto_UpdateJettonReq::set_has_change_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Proto_UpdateJettonReq::clear_has_change_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Proto_UpdateJettonReq::clear_change_type() {
  change_type_ = 0u;
  clear_has_change_type();
}
inline ::google::protobuf::uint32 Proto_UpdateJettonReq::change_type() const {
  return change_type_;
}
inline void Proto_UpdateJettonReq::set_change_type(::google::protobuf::uint32 value) {
  set_has_change_type();
  change_type_ = value;
}

// optional int64 money_change = 10;
inline bool Proto_UpdateJettonReq::has_money_change() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Proto_UpdateJettonReq::set_has_money_change() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Proto_UpdateJettonReq::clear_has_money_change() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Proto_UpdateJettonReq::clear_money_change() {
  money_change_ = GOOGLE_LONGLONG(0);
  clear_has_money_change();
}
inline ::google::protobuf::int64 Proto_UpdateJettonReq::money_change() const {
  return money_change_;
}
inline void Proto_UpdateJettonReq::set_money_change(::google::protobuf::int64 value) {
  set_has_money_change();
  money_change_ = value;
}

// optional uint32 time = 11;
inline bool Proto_UpdateJettonReq::has_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Proto_UpdateJettonReq::set_has_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Proto_UpdateJettonReq::clear_has_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Proto_UpdateJettonReq::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 Proto_UpdateJettonReq::time() const {
  return time_;
}
inline void Proto_UpdateJettonReq::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional bool add_or_deduce = 12;
inline bool Proto_UpdateJettonReq::has_add_or_deduce() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Proto_UpdateJettonReq::set_has_add_or_deduce() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Proto_UpdateJettonReq::clear_has_add_or_deduce() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Proto_UpdateJettonReq::clear_add_or_deduce() {
  add_or_deduce_ = false;
  clear_has_add_or_deduce();
}
inline bool Proto_UpdateJettonReq::add_or_deduce() const {
  return add_or_deduce_;
}
inline void Proto_UpdateJettonReq::set_add_or_deduce(bool value) {
  set_has_add_or_deduce();
  add_or_deduce_ = value;
}

// -------------------------------------------------------------------

// Proto_UpdateJettonRsp

// optional uint32 result = 1;
inline bool Proto_UpdateJettonRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_UpdateJettonRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_UpdateJettonRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_UpdateJettonRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 Proto_UpdateJettonRsp::result() const {
  return result_;
}
inline void Proto_UpdateJettonRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 player_id = 2;
inline bool Proto_UpdateJettonRsp::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_UpdateJettonRsp::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_UpdateJettonRsp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_UpdateJettonRsp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_UpdateJettonRsp::player_id() const {
  return player_id_;
}
inline void Proto_UpdateJettonRsp::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional int64 money = 3;
inline bool Proto_UpdateJettonRsp::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_UpdateJettonRsp::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_UpdateJettonRsp::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_UpdateJettonRsp::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 Proto_UpdateJettonRsp::money() const {
  return money_;
}
inline void Proto_UpdateJettonRsp::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
}

// -------------------------------------------------------------------

// Proto_NotifyServerPlayerExitGame

// optional uint64 player_id = 1;
inline bool Proto_NotifyServerPlayerExitGame::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_NotifyServerPlayerExitGame::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_NotifyServerPlayerExitGame::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_NotifyServerPlayerExitGame::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 Proto_NotifyServerPlayerExitGame::player_id() const {
  return player_id_;
}
inline void Proto_NotifyServerPlayerExitGame::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 game_id = 2;
inline bool Proto_NotifyServerPlayerExitGame::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_NotifyServerPlayerExitGame::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_NotifyServerPlayerExitGame::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_NotifyServerPlayerExitGame::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 Proto_NotifyServerPlayerExitGame::game_id() const {
  return game_id_;
}
inline void Proto_NotifyServerPlayerExitGame::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 3;
inline bool Proto_NotifyServerPlayerExitGame::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_NotifyServerPlayerExitGame::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_NotifyServerPlayerExitGame::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_NotifyServerPlayerExitGame::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 Proto_NotifyServerPlayerExitGame::room_id() const {
  return room_id_;
}
inline void Proto_NotifyServerPlayerExitGame::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 desk_id = 4;
inline bool Proto_NotifyServerPlayerExitGame::has_desk_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_NotifyServerPlayerExitGame::set_has_desk_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_NotifyServerPlayerExitGame::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_NotifyServerPlayerExitGame::clear_desk_id() {
  desk_id_ = 0u;
  clear_has_desk_id();
}
inline ::google::protobuf::uint32 Proto_NotifyServerPlayerExitGame::desk_id() const {
  return desk_id_;
}
inline void Proto_NotifyServerPlayerExitGame::set_desk_id(::google::protobuf::uint32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// -------------------------------------------------------------------

// GameRoomRegReq

// optional .proto_ff.GameServerRoomInfo room_info = 1;
inline bool GameRoomRegReq::has_room_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameRoomRegReq::set_has_room_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameRoomRegReq::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameRoomRegReq::clear_room_info() {
  if (room_info_ != NULL) room_info_->::proto_ff::GameServerRoomInfo::Clear();
  clear_has_room_info();
}
inline const ::proto_ff::GameServerRoomInfo& GameRoomRegReq::room_info() const {
  return room_info_ != NULL ? *room_info_ : *default_instance_->room_info_;
}
inline ::proto_ff::GameServerRoomInfo* GameRoomRegReq::mutable_room_info() {
  set_has_room_info();
  if (room_info_ == NULL) room_info_ = new ::proto_ff::GameServerRoomInfo;
  return room_info_;
}
inline ::proto_ff::GameServerRoomInfo* GameRoomRegReq::release_room_info() {
  clear_has_room_info();
  ::proto_ff::GameServerRoomInfo* temp = room_info_;
  room_info_ = NULL;
  return temp;
}
inline void GameRoomRegReq::set_allocated_room_info(::proto_ff::GameServerRoomInfo* room_info) {
  delete room_info_;
  room_info_ = room_info;
  if (room_info) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
}

// -------------------------------------------------------------------

// GameRoomUnRegReq

// optional .proto_ff.GameServerRoomInfo room_info = 1;
inline bool GameRoomUnRegReq::has_room_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameRoomUnRegReq::set_has_room_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameRoomUnRegReq::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameRoomUnRegReq::clear_room_info() {
  if (room_info_ != NULL) room_info_->::proto_ff::GameServerRoomInfo::Clear();
  clear_has_room_info();
}
inline const ::proto_ff::GameServerRoomInfo& GameRoomUnRegReq::room_info() const {
  return room_info_ != NULL ? *room_info_ : *default_instance_->room_info_;
}
inline ::proto_ff::GameServerRoomInfo* GameRoomUnRegReq::mutable_room_info() {
  set_has_room_info();
  if (room_info_ == NULL) room_info_ = new ::proto_ff::GameServerRoomInfo;
  return room_info_;
}
inline ::proto_ff::GameServerRoomInfo* GameRoomUnRegReq::release_room_info() {
  clear_has_room_info();
  ::proto_ff::GameServerRoomInfo* temp = room_info_;
  room_info_ = NULL;
  return temp;
}
inline void GameRoomUnRegReq::set_allocated_room_info(::proto_ff::GameServerRoomInfo* room_info) {
  delete room_info_;
  room_info_ = room_info;
  if (room_info) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
}

// -------------------------------------------------------------------

// GameRoomUpdateOnlineCountReq

// optional .proto_ff.GameServerRoomInfo room_info = 1;
inline bool GameRoomUpdateOnlineCountReq::has_room_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameRoomUpdateOnlineCountReq::set_has_room_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameRoomUpdateOnlineCountReq::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameRoomUpdateOnlineCountReq::clear_room_info() {
  if (room_info_ != NULL) room_info_->::proto_ff::GameServerRoomInfo::Clear();
  clear_has_room_info();
}
inline const ::proto_ff::GameServerRoomInfo& GameRoomUpdateOnlineCountReq::room_info() const {
  return room_info_ != NULL ? *room_info_ : *default_instance_->room_info_;
}
inline ::proto_ff::GameServerRoomInfo* GameRoomUpdateOnlineCountReq::mutable_room_info() {
  set_has_room_info();
  if (room_info_ == NULL) room_info_ = new ::proto_ff::GameServerRoomInfo;
  return room_info_;
}
inline ::proto_ff::GameServerRoomInfo* GameRoomUpdateOnlineCountReq::release_room_info() {
  clear_has_room_info();
  ::proto_ff::GameServerRoomInfo* temp = room_info_;
  room_info_ = NULL;
  return temp;
}
inline void GameRoomUpdateOnlineCountReq::set_allocated_room_info(::proto_ff::GameServerRoomInfo* room_info) {
  delete room_info_;
  room_info_ = room_info;
  if (room_info) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
}

// -------------------------------------------------------------------

// GameRoomLoginReq

// optional uint32 game_id = 1;
inline bool GameRoomLoginReq::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameRoomLoginReq::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameRoomLoginReq::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameRoomLoginReq::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 GameRoomLoginReq::game_id() const {
  return game_id_;
}
inline void GameRoomLoginReq::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 2;
inline bool GameRoomLoginReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameRoomLoginReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameRoomLoginReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameRoomLoginReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 GameRoomLoginReq::room_id() const {
  return room_id_;
}
inline void GameRoomLoginReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint64 player_id = 3;
inline bool GameRoomLoginReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameRoomLoginReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameRoomLoginReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameRoomLoginReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 GameRoomLoginReq::player_id() const {
  return player_id_;
}
inline void GameRoomLoginReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 proxy_id = 4;
inline bool GameRoomLoginReq::has_proxy_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameRoomLoginReq::set_has_proxy_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameRoomLoginReq::clear_has_proxy_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameRoomLoginReq::clear_proxy_id() {
  proxy_id_ = 0u;
  clear_has_proxy_id();
}
inline ::google::protobuf::uint32 GameRoomLoginReq::proxy_id() const {
  return proxy_id_;
}
inline void GameRoomLoginReq::set_proxy_id(::google::protobuf::uint32 value) {
  set_has_proxy_id();
  proxy_id_ = value;
}

// -------------------------------------------------------------------

// GameRoomLoginRsp

// optional uint32 result = 1;
inline bool GameRoomLoginRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameRoomLoginRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameRoomLoginRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameRoomLoginRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 GameRoomLoginRsp::result() const {
  return result_;
}
inline void GameRoomLoginRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ClearAllGamePlayerNotify

// -------------------------------------------------------------------

// GameServerDumpNotify

// optional uint32 game_id = 1;
inline bool GameServerDumpNotify::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameServerDumpNotify::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameServerDumpNotify::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameServerDumpNotify::clear_game_id() {
  game_id_ = 0u;
  clear_has_game_id();
}
inline ::google::protobuf::uint32 GameServerDumpNotify::game_id() const {
  return game_id_;
}
inline void GameServerDumpNotify::set_game_id(::google::protobuf::uint32 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint32 room_id = 2;
inline bool GameServerDumpNotify::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameServerDumpNotify::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameServerDumpNotify::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameServerDumpNotify::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 GameServerDumpNotify::room_id() const {
  return room_id_;
}
inline void GameServerDumpNotify::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 bus_id = 3;
inline bool GameServerDumpNotify::has_bus_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameServerDumpNotify::set_has_bus_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameServerDumpNotify::clear_has_bus_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameServerDumpNotify::clear_bus_id() {
  bus_id_ = 0u;
  clear_has_bus_id();
}
inline ::google::protobuf::uint32 GameServerDumpNotify::bus_id() const {
  return bus_id_;
}
inline void GameServerDumpNotify::set_bus_id(::google::protobuf::uint32 value) {
  set_has_bus_id();
  bus_id_ = value;
}

// -------------------------------------------------------------------

// Proto_LTSRedeemCodeReq

// optional string id = 1;
inline bool Proto_LTSRedeemCodeReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_LTSRedeemCodeReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_LTSRedeemCodeReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_LTSRedeemCodeReq::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& Proto_LTSRedeemCodeReq::id() const {
  return *id_;
}
inline void Proto_LTSRedeemCodeReq::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void Proto_LTSRedeemCodeReq::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void Proto_LTSRedeemCodeReq::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_LTSRedeemCodeReq::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* Proto_LTSRedeemCodeReq::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_LTSRedeemCodeReq::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 user_id = 2;
inline bool Proto_LTSRedeemCodeReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_LTSRedeemCodeReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_LTSRedeemCodeReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_LTSRedeemCodeReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_LTSRedeemCodeReq::user_id() const {
  return user_id_;
}
inline void Proto_LTSRedeemCodeReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// Proto_STLRedeemCodeRsp

// optional int32 result = 1;
inline bool Proto_STLRedeemCodeRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_STLRedeemCodeRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_STLRedeemCodeRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_STLRedeemCodeRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_STLRedeemCodeRsp::result() const {
  return result_;
}
inline void Proto_STLRedeemCodeRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional string id = 2;
inline bool Proto_STLRedeemCodeRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_STLRedeemCodeRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_STLRedeemCodeRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_STLRedeemCodeRsp::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& Proto_STLRedeemCodeRsp::id() const {
  return *id_;
}
inline void Proto_STLRedeemCodeRsp::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void Proto_STLRedeemCodeRsp::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void Proto_STLRedeemCodeRsp::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto_STLRedeemCodeRsp::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* Proto_STLRedeemCodeRsp::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Proto_STLRedeemCodeRsp::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 user_id = 3;
inline bool Proto_STLRedeemCodeRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_STLRedeemCodeRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_STLRedeemCodeRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_STLRedeemCodeRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_STLRedeemCodeRsp::user_id() const {
  return user_id_;
}
inline void Proto_STLRedeemCodeRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint64 add_gold = 4;
inline bool Proto_STLRedeemCodeRsp::has_add_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_STLRedeemCodeRsp::set_has_add_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_STLRedeemCodeRsp::clear_has_add_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_STLRedeemCodeRsp::clear_add_gold() {
  add_gold_ = GOOGLE_ULONGLONG(0);
  clear_has_add_gold();
}
inline ::google::protobuf::uint64 Proto_STLRedeemCodeRsp::add_gold() const {
  return add_gold_;
}
inline void Proto_STLRedeemCodeRsp::set_add_gold(::google::protobuf::uint64 value) {
  set_has_add_gold();
  add_gold_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::Proto_GameSvrMsgID>() {
  return ::proto_ff::Proto_GameSvrMsgID_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fsvr_5fgame_2eproto__INCLUDED
