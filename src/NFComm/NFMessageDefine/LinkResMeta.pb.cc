// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LinkResMeta.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "LinkResMeta.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_ff {

namespace {

const ::google::protobuf::Descriptor* Proto_HMLineRateMgr_item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_HMLineRateMgr_item_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_HMLineRateMgr_icon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_HMLineRateMgr_icon_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_HMLineRateMgr_mary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_HMLineRateMgr_mary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_HMLineRateMgr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_HMLineRateMgr_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_HMRecordItem_Row_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_HMRecordItem_Row_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_HMRecordItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_HMRecordItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_MaryResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_MaryResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_LineColCfg_item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_LineColCfg_item_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_LineColCfg_Col_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_LineColCfg_Col_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_LineColCfg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_LineColCfg_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_LinkResult_item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_LinkResult_item_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_LinkResult_Row_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_LinkResult_Row_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_LinkResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_LinkResult_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_LinkResMeta_2eproto() {
  protobuf_AddDesc_LinkResMeta_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "LinkResMeta.proto");
  GOOGLE_CHECK(file != NULL);
  Proto_HMLineRateMgr_item_descriptor_ = file->message_type(0);
  static const int Proto_HMLineRateMgr_item_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr_item, item_),
  };
  Proto_HMLineRateMgr_item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_HMLineRateMgr_item_descriptor_,
      Proto_HMLineRateMgr_item::default_instance_,
      Proto_HMLineRateMgr_item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr_item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr_item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_HMLineRateMgr_item));
  Proto_HMLineRateMgr_icon_descriptor_ = file->message_type(1);
  static const int Proto_HMLineRateMgr_icon_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr_icon, icon_),
  };
  Proto_HMLineRateMgr_icon_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_HMLineRateMgr_icon_descriptor_,
      Proto_HMLineRateMgr_icon::default_instance_,
      Proto_HMLineRateMgr_icon_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr_icon, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr_icon, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_HMLineRateMgr_icon));
  Proto_HMLineRateMgr_mary_descriptor_ = file->message_type(2);
  static const int Proto_HMLineRateMgr_mary_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr_mary, iconright_),
  };
  Proto_HMLineRateMgr_mary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_HMLineRateMgr_mary_descriptor_,
      Proto_HMLineRateMgr_mary::default_instance_,
      Proto_HMLineRateMgr_mary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr_mary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr_mary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_HMLineRateMgr_mary));
  Proto_HMLineRateMgr_descriptor_ = file->message_type(3);
  static const int Proto_HMLineRateMgr_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr, main_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr, free_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr, shulaibao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr, mary_),
  };
  Proto_HMLineRateMgr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_HMLineRateMgr_descriptor_,
      Proto_HMLineRateMgr::default_instance_,
      Proto_HMLineRateMgr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMLineRateMgr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_HMLineRateMgr));
  Proto_HMRecordItem_Row_descriptor_ = file->message_type(4);
  static const int Proto_HMRecordItem_Row_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMRecordItem_Row, col_),
  };
  Proto_HMRecordItem_Row_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_HMRecordItem_Row_descriptor_,
      Proto_HMRecordItem_Row::default_instance_,
      Proto_HMRecordItem_Row_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMRecordItem_Row, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMRecordItem_Row, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_HMRecordItem_Row));
  Proto_HMRecordItem_descriptor_ = file->message_type(5);
  static const int Proto_HMRecordItem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMRecordItem, row_),
  };
  Proto_HMRecordItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_HMRecordItem_descriptor_,
      Proto_HMRecordItem::default_instance_,
      Proto_HMRecordItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMRecordItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_HMRecordItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_HMRecordItem));
  Proto_MaryResult_descriptor_ = file->message_type(6);
  static const int Proto_MaryResult_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_MaryResult, outer_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_MaryResult, mul_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_MaryResult, vec_inner_value_),
  };
  Proto_MaryResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_MaryResult_descriptor_,
      Proto_MaryResult::default_instance_,
      Proto_MaryResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_MaryResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_MaryResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_MaryResult));
  Proto_LineColCfg_item_descriptor_ = file->message_type(7);
  static const int Proto_LineColCfg_item_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LineColCfg_item, item_),
  };
  Proto_LineColCfg_item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_LineColCfg_item_descriptor_,
      Proto_LineColCfg_item::default_instance_,
      Proto_LineColCfg_item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LineColCfg_item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LineColCfg_item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_LineColCfg_item));
  Proto_LineColCfg_Col_descriptor_ = file->message_type(8);
  static const int Proto_LineColCfg_Col_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LineColCfg_Col, col_),
  };
  Proto_LineColCfg_Col_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_LineColCfg_Col_descriptor_,
      Proto_LineColCfg_Col::default_instance_,
      Proto_LineColCfg_Col_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LineColCfg_Col, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LineColCfg_Col, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_LineColCfg_Col));
  Proto_LineColCfg_descriptor_ = file->message_type(9);
  static const int Proto_LineColCfg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LineColCfg, main_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LineColCfg, free_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LineColCfg, shulaibao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LineColCfg, bubugao_),
  };
  Proto_LineColCfg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_LineColCfg_descriptor_,
      Proto_LineColCfg::default_instance_,
      Proto_LineColCfg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LineColCfg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LineColCfg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_LineColCfg));
  Proto_LinkResult_item_descriptor_ = file->message_type(10);
  static const int Proto_LinkResult_item_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LinkResult_item, item_),
  };
  Proto_LinkResult_item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_LinkResult_item_descriptor_,
      Proto_LinkResult_item::default_instance_,
      Proto_LinkResult_item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LinkResult_item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LinkResult_item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_LinkResult_item));
  Proto_LinkResult_Row_descriptor_ = file->message_type(11);
  static const int Proto_LinkResult_Row_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LinkResult_Row, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LinkResult_Row, resulttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LinkResult_Row, rowcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LinkResult_Row, colcount_),
  };
  Proto_LinkResult_Row_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_LinkResult_Row_descriptor_,
      Proto_LinkResult_Row::default_instance_,
      Proto_LinkResult_Row_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LinkResult_Row, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LinkResult_Row, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_LinkResult_Row));
  Proto_LinkResult_descriptor_ = file->message_type(12);
  static const int Proto_LinkResult_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LinkResult, config_),
  };
  Proto_LinkResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto_LinkResult_descriptor_,
      Proto_LinkResult::default_instance_,
      Proto_LinkResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LinkResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LinkResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto_LinkResult));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_LinkResMeta_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_HMLineRateMgr_item_descriptor_, &Proto_HMLineRateMgr_item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_HMLineRateMgr_icon_descriptor_, &Proto_HMLineRateMgr_icon::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_HMLineRateMgr_mary_descriptor_, &Proto_HMLineRateMgr_mary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_HMLineRateMgr_descriptor_, &Proto_HMLineRateMgr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_HMRecordItem_Row_descriptor_, &Proto_HMRecordItem_Row::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_HMRecordItem_descriptor_, &Proto_HMRecordItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_MaryResult_descriptor_, &Proto_MaryResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_LineColCfg_item_descriptor_, &Proto_LineColCfg_item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_LineColCfg_Col_descriptor_, &Proto_LineColCfg_Col::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_LineColCfg_descriptor_, &Proto_LineColCfg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_LinkResult_item_descriptor_, &Proto_LinkResult_item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_LinkResult_Row_descriptor_, &Proto_LinkResult_Row::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto_LinkResult_descriptor_, &Proto_LinkResult::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_LinkResMeta_2eproto() {
  delete Proto_HMLineRateMgr_item::default_instance_;
  delete Proto_HMLineRateMgr_item_reflection_;
  delete Proto_HMLineRateMgr_icon::default_instance_;
  delete Proto_HMLineRateMgr_icon_reflection_;
  delete Proto_HMLineRateMgr_mary::default_instance_;
  delete Proto_HMLineRateMgr_mary_reflection_;
  delete Proto_HMLineRateMgr::default_instance_;
  delete Proto_HMLineRateMgr_reflection_;
  delete Proto_HMRecordItem_Row::default_instance_;
  delete Proto_HMRecordItem_Row_reflection_;
  delete Proto_HMRecordItem::default_instance_;
  delete Proto_HMRecordItem_reflection_;
  delete Proto_MaryResult::default_instance_;
  delete Proto_MaryResult_reflection_;
  delete Proto_LineColCfg_item::default_instance_;
  delete Proto_LineColCfg_item_reflection_;
  delete Proto_LineColCfg_Col::default_instance_;
  delete Proto_LineColCfg_Col_reflection_;
  delete Proto_LineColCfg::default_instance_;
  delete Proto_LineColCfg_reflection_;
  delete Proto_LinkResult_item::default_instance_;
  delete Proto_LinkResult_item_reflection_;
  delete Proto_LinkResult_Row::default_instance_;
  delete Proto_LinkResult_Row_reflection_;
  delete Proto_LinkResult::default_instance_;
  delete Proto_LinkResult_reflection_;
}

void protobuf_AddDesc_LinkResMeta_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::yd_fieldoptions::protobuf_AddDesc_yd_5ffieldoptions_2eproto();
  ::proto_ff::protobuf_AddDesc_proto_5fcommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021LinkResMeta.proto\022\010proto_ff\032\025yd_fieldo"
    "ptions.proto\032\022proto_common.proto\".\n\030Prot"
    "o_HMLineRateMgr_item\022\022\n\004item\030\001 \003(\005B\004\210\301\024\017"
    "\"R\n\030Proto_HMLineRateMgr_icon\0226\n\004icon\030\001 \003"
    "(\0132\".proto_ff.Proto_HMLineRateMgr_itemB\004"
    "\210\301\024\017\"3\n\030Proto_HMLineRateMgr_mary\022\027\n\tIcon"
    "Right\030\001 \003(\005B\004\210\301\024\017\"\342\001\n\023Proto_HMLineRateMg"
    "r\0220\n\004main\030\001 \001(\0132\".proto_ff.Proto_HMLineR"
    "ateMgr_icon\0220\n\004free\030\002 \001(\0132\".proto_ff.Pro"
    "to_HMLineRateMgr_icon\0225\n\tshulaibao\030\003 \001(\013"
    "2\".proto_ff.Proto_HMLineRateMgr_icon\0220\n\004"
    "mary\030\004 \001(\0132\".proto_ff.Proto_HMLineRateMg"
    "r_mary\"+\n\026Proto_HMRecordItem_Row\022\021\n\003col\030"
    "\001 \003(\005B\004\210\301\024\005\"I\n\022Proto_HMRecordItem\0223\n\003row"
    "\030\001 \003(\0132 .proto_ff.Proto_HMRecordItem_Row"
    "B\004\210\301\024\005\"S\n\020Proto_MaryResult\022\023\n\013outer_valu"
    "e\030\001 \001(\005\022\013\n\003mul\030\002 \001(\005\022\035\n\017vec_inner_value\030"
    "\003 \003(\005B\004\210\301\024\n\"+\n\025Proto_LineColCfg_item\022\022\n\004"
    "item\030\001 \003(\005B\004\210\301\024\017\"J\n\024Proto_LineColCfg_Col"
    "\0222\n\003Col\030\001 \003(\0132\037.proto_ff.Proto_LineColCf"
    "g_itemB\004\210\301\024\017\"\322\001\n\020Proto_LineColCfg\022,\n\004mai"
    "n\030\001 \001(\0132\036.proto_ff.Proto_LineColCfg_Col\022"
    ",\n\004free\030\002 \001(\0132\036.proto_ff.Proto_LineColCf"
    "g_Col\0221\n\tshulaibao\030\003 \001(\0132\036.proto_ff.Prot"
    "o_LineColCfg_Col\022/\n\007bubugao\030\004 \001(\0132\036.prot"
    "o_ff.Proto_LineColCfg_Col\"+\n\025Proto_LinkR"
    "esult_item\022\022\n\004item\030\001 \003(\005B\004\210\301\024\n\"\202\001\n\024Proto"
    "_LinkResult_Row\0222\n\003Row\030\001 \003(\0132\037.proto_ff."
    "Proto_LineColCfg_itemB\004\210\301\024\n\022\022\n\nresulttyp"
    "e\030\002 \001(\005\022\020\n\010rowcount\030\003 \001(\005\022\020\n\010colcount\030\004 "
    "\001(\005\"B\n\020Proto_LinkResult\022.\n\006config\030\001 \001(\0132"
    "\036.proto_ff.Proto_LinkResult_Row", 1271);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LinkResMeta.proto", &protobuf_RegisterTypes);
  Proto_HMLineRateMgr_item::default_instance_ = new Proto_HMLineRateMgr_item();
  Proto_HMLineRateMgr_icon::default_instance_ = new Proto_HMLineRateMgr_icon();
  Proto_HMLineRateMgr_mary::default_instance_ = new Proto_HMLineRateMgr_mary();
  Proto_HMLineRateMgr::default_instance_ = new Proto_HMLineRateMgr();
  Proto_HMRecordItem_Row::default_instance_ = new Proto_HMRecordItem_Row();
  Proto_HMRecordItem::default_instance_ = new Proto_HMRecordItem();
  Proto_MaryResult::default_instance_ = new Proto_MaryResult();
  Proto_LineColCfg_item::default_instance_ = new Proto_LineColCfg_item();
  Proto_LineColCfg_Col::default_instance_ = new Proto_LineColCfg_Col();
  Proto_LineColCfg::default_instance_ = new Proto_LineColCfg();
  Proto_LinkResult_item::default_instance_ = new Proto_LinkResult_item();
  Proto_LinkResult_Row::default_instance_ = new Proto_LinkResult_Row();
  Proto_LinkResult::default_instance_ = new Proto_LinkResult();
  Proto_HMLineRateMgr_item::default_instance_->InitAsDefaultInstance();
  Proto_HMLineRateMgr_icon::default_instance_->InitAsDefaultInstance();
  Proto_HMLineRateMgr_mary::default_instance_->InitAsDefaultInstance();
  Proto_HMLineRateMgr::default_instance_->InitAsDefaultInstance();
  Proto_HMRecordItem_Row::default_instance_->InitAsDefaultInstance();
  Proto_HMRecordItem::default_instance_->InitAsDefaultInstance();
  Proto_MaryResult::default_instance_->InitAsDefaultInstance();
  Proto_LineColCfg_item::default_instance_->InitAsDefaultInstance();
  Proto_LineColCfg_Col::default_instance_->InitAsDefaultInstance();
  Proto_LineColCfg::default_instance_->InitAsDefaultInstance();
  Proto_LinkResult_item::default_instance_->InitAsDefaultInstance();
  Proto_LinkResult_Row::default_instance_->InitAsDefaultInstance();
  Proto_LinkResult::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_LinkResMeta_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_LinkResMeta_2eproto {
  StaticDescriptorInitializer_LinkResMeta_2eproto() {
    protobuf_AddDesc_LinkResMeta_2eproto();
  }
} static_descriptor_initializer_LinkResMeta_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Proto_HMLineRateMgr_item::kItemFieldNumber;
#endif  // !_MSC_VER

Proto_HMLineRateMgr_item::Proto_HMLineRateMgr_item()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_HMLineRateMgr_item::InitAsDefaultInstance() {
}

Proto_HMLineRateMgr_item::Proto_HMLineRateMgr_item(const Proto_HMLineRateMgr_item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_HMLineRateMgr_item::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_HMLineRateMgr_item::~Proto_HMLineRateMgr_item() {
  SharedDtor();
}

void Proto_HMLineRateMgr_item::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_HMLineRateMgr_item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_HMLineRateMgr_item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_HMLineRateMgr_item_descriptor_;
}

const Proto_HMLineRateMgr_item& Proto_HMLineRateMgr_item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LinkResMeta_2eproto();
  return *default_instance_;
}

Proto_HMLineRateMgr_item* Proto_HMLineRateMgr_item::default_instance_ = NULL;

Proto_HMLineRateMgr_item* Proto_HMLineRateMgr_item::New() const {
  return new Proto_HMLineRateMgr_item;
}

void Proto_HMLineRateMgr_item::Clear() {
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_HMLineRateMgr_item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_item())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_HMLineRateMgr_item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_HMLineRateMgr_item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_HMLineRateMgr_item::ByteSize() const {
  int total_size = 0;

  // repeated int32 item = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item(i));
    }
    total_size += 1 * this->item_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_HMLineRateMgr_item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_HMLineRateMgr_item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_HMLineRateMgr_item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_HMLineRateMgr_item::MergeFrom(const Proto_HMLineRateMgr_item& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_HMLineRateMgr_item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_HMLineRateMgr_item::CopyFrom(const Proto_HMLineRateMgr_item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_HMLineRateMgr_item::IsInitialized() const {

  return true;
}

void Proto_HMLineRateMgr_item::Swap(Proto_HMLineRateMgr_item* other) {
  if (other != this) {
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_HMLineRateMgr_item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_HMLineRateMgr_item_descriptor_;
  metadata.reflection = Proto_HMLineRateMgr_item_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_HMLineRateMgr_icon::kIconFieldNumber;
#endif  // !_MSC_VER

Proto_HMLineRateMgr_icon::Proto_HMLineRateMgr_icon()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_HMLineRateMgr_icon::InitAsDefaultInstance() {
}

Proto_HMLineRateMgr_icon::Proto_HMLineRateMgr_icon(const Proto_HMLineRateMgr_icon& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_HMLineRateMgr_icon::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_HMLineRateMgr_icon::~Proto_HMLineRateMgr_icon() {
  SharedDtor();
}

void Proto_HMLineRateMgr_icon::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_HMLineRateMgr_icon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_HMLineRateMgr_icon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_HMLineRateMgr_icon_descriptor_;
}

const Proto_HMLineRateMgr_icon& Proto_HMLineRateMgr_icon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LinkResMeta_2eproto();
  return *default_instance_;
}

Proto_HMLineRateMgr_icon* Proto_HMLineRateMgr_icon::default_instance_ = NULL;

Proto_HMLineRateMgr_icon* Proto_HMLineRateMgr_icon::New() const {
  return new Proto_HMLineRateMgr_icon;
}

void Proto_HMLineRateMgr_icon::Clear() {
  icon_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_HMLineRateMgr_icon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.Proto_HMLineRateMgr_item icon = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_icon()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_icon;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_HMLineRateMgr_icon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.Proto_HMLineRateMgr_item icon = 1;
  for (int i = 0; i < this->icon_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->icon(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_HMLineRateMgr_icon::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.Proto_HMLineRateMgr_item icon = 1;
  for (int i = 0; i < this->icon_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->icon(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_HMLineRateMgr_icon::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.Proto_HMLineRateMgr_item icon = 1;
  total_size += 1 * this->icon_size();
  for (int i = 0; i < this->icon_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->icon(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_HMLineRateMgr_icon::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_HMLineRateMgr_icon* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_HMLineRateMgr_icon*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_HMLineRateMgr_icon::MergeFrom(const Proto_HMLineRateMgr_icon& from) {
  GOOGLE_CHECK_NE(&from, this);
  icon_.MergeFrom(from.icon_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_HMLineRateMgr_icon::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_HMLineRateMgr_icon::CopyFrom(const Proto_HMLineRateMgr_icon& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_HMLineRateMgr_icon::IsInitialized() const {

  return true;
}

void Proto_HMLineRateMgr_icon::Swap(Proto_HMLineRateMgr_icon* other) {
  if (other != this) {
    icon_.Swap(&other->icon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_HMLineRateMgr_icon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_HMLineRateMgr_icon_descriptor_;
  metadata.reflection = Proto_HMLineRateMgr_icon_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_HMLineRateMgr_mary::kIconRightFieldNumber;
#endif  // !_MSC_VER

Proto_HMLineRateMgr_mary::Proto_HMLineRateMgr_mary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_HMLineRateMgr_mary::InitAsDefaultInstance() {
}

Proto_HMLineRateMgr_mary::Proto_HMLineRateMgr_mary(const Proto_HMLineRateMgr_mary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_HMLineRateMgr_mary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_HMLineRateMgr_mary::~Proto_HMLineRateMgr_mary() {
  SharedDtor();
}

void Proto_HMLineRateMgr_mary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_HMLineRateMgr_mary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_HMLineRateMgr_mary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_HMLineRateMgr_mary_descriptor_;
}

const Proto_HMLineRateMgr_mary& Proto_HMLineRateMgr_mary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LinkResMeta_2eproto();
  return *default_instance_;
}

Proto_HMLineRateMgr_mary* Proto_HMLineRateMgr_mary::default_instance_ = NULL;

Proto_HMLineRateMgr_mary* Proto_HMLineRateMgr_mary::New() const {
  return new Proto_HMLineRateMgr_mary;
}

void Proto_HMLineRateMgr_mary::Clear() {
  iconright_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_HMLineRateMgr_mary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 IconRight = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_IconRight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_iconright())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_iconright())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_IconRight;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_HMLineRateMgr_mary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 IconRight = 1;
  for (int i = 0; i < this->iconright_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->iconright(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_HMLineRateMgr_mary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 IconRight = 1;
  for (int i = 0; i < this->iconright_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->iconright(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_HMLineRateMgr_mary::ByteSize() const {
  int total_size = 0;

  // repeated int32 IconRight = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->iconright_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->iconright(i));
    }
    total_size += 1 * this->iconright_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_HMLineRateMgr_mary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_HMLineRateMgr_mary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_HMLineRateMgr_mary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_HMLineRateMgr_mary::MergeFrom(const Proto_HMLineRateMgr_mary& from) {
  GOOGLE_CHECK_NE(&from, this);
  iconright_.MergeFrom(from.iconright_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_HMLineRateMgr_mary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_HMLineRateMgr_mary::CopyFrom(const Proto_HMLineRateMgr_mary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_HMLineRateMgr_mary::IsInitialized() const {

  return true;
}

void Proto_HMLineRateMgr_mary::Swap(Proto_HMLineRateMgr_mary* other) {
  if (other != this) {
    iconright_.Swap(&other->iconright_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_HMLineRateMgr_mary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_HMLineRateMgr_mary_descriptor_;
  metadata.reflection = Proto_HMLineRateMgr_mary_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_HMLineRateMgr::kMainFieldNumber;
const int Proto_HMLineRateMgr::kFreeFieldNumber;
const int Proto_HMLineRateMgr::kShulaibaoFieldNumber;
const int Proto_HMLineRateMgr::kMaryFieldNumber;
#endif  // !_MSC_VER

Proto_HMLineRateMgr::Proto_HMLineRateMgr()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_HMLineRateMgr::InitAsDefaultInstance() {
  main_ = const_cast< ::proto_ff::Proto_HMLineRateMgr_icon*>(&::proto_ff::Proto_HMLineRateMgr_icon::default_instance());
  free_ = const_cast< ::proto_ff::Proto_HMLineRateMgr_icon*>(&::proto_ff::Proto_HMLineRateMgr_icon::default_instance());
  shulaibao_ = const_cast< ::proto_ff::Proto_HMLineRateMgr_icon*>(&::proto_ff::Proto_HMLineRateMgr_icon::default_instance());
  mary_ = const_cast< ::proto_ff::Proto_HMLineRateMgr_mary*>(&::proto_ff::Proto_HMLineRateMgr_mary::default_instance());
}

Proto_HMLineRateMgr::Proto_HMLineRateMgr(const Proto_HMLineRateMgr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_HMLineRateMgr::SharedCtor() {
  _cached_size_ = 0;
  main_ = NULL;
  free_ = NULL;
  shulaibao_ = NULL;
  mary_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_HMLineRateMgr::~Proto_HMLineRateMgr() {
  SharedDtor();
}

void Proto_HMLineRateMgr::SharedDtor() {
  if (this != default_instance_) {
    delete main_;
    delete free_;
    delete shulaibao_;
    delete mary_;
  }
}

void Proto_HMLineRateMgr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_HMLineRateMgr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_HMLineRateMgr_descriptor_;
}

const Proto_HMLineRateMgr& Proto_HMLineRateMgr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LinkResMeta_2eproto();
  return *default_instance_;
}

Proto_HMLineRateMgr* Proto_HMLineRateMgr::default_instance_ = NULL;

Proto_HMLineRateMgr* Proto_HMLineRateMgr::New() const {
  return new Proto_HMLineRateMgr;
}

void Proto_HMLineRateMgr::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_main()) {
      if (main_ != NULL) main_->::proto_ff::Proto_HMLineRateMgr_icon::Clear();
    }
    if (has_free()) {
      if (free_ != NULL) free_->::proto_ff::Proto_HMLineRateMgr_icon::Clear();
    }
    if (has_shulaibao()) {
      if (shulaibao_ != NULL) shulaibao_->::proto_ff::Proto_HMLineRateMgr_icon::Clear();
    }
    if (has_mary()) {
      if (mary_ != NULL) mary_->::proto_ff::Proto_HMLineRateMgr_mary::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_HMLineRateMgr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto_ff.Proto_HMLineRateMgr_icon main = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_main()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_free;
        break;
      }

      // optional .proto_ff.Proto_HMLineRateMgr_icon free = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_free:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_free()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_shulaibao;
        break;
      }

      // optional .proto_ff.Proto_HMLineRateMgr_icon shulaibao = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shulaibao:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shulaibao()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mary;
        break;
      }

      // optional .proto_ff.Proto_HMLineRateMgr_mary mary = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mary()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_HMLineRateMgr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .proto_ff.Proto_HMLineRateMgr_icon main = 1;
  if (has_main()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->main(), output);
  }

  // optional .proto_ff.Proto_HMLineRateMgr_icon free = 2;
  if (has_free()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->free(), output);
  }

  // optional .proto_ff.Proto_HMLineRateMgr_icon shulaibao = 3;
  if (has_shulaibao()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->shulaibao(), output);
  }

  // optional .proto_ff.Proto_HMLineRateMgr_mary mary = 4;
  if (has_mary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->mary(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_HMLineRateMgr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .proto_ff.Proto_HMLineRateMgr_icon main = 1;
  if (has_main()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->main(), target);
  }

  // optional .proto_ff.Proto_HMLineRateMgr_icon free = 2;
  if (has_free()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->free(), target);
  }

  // optional .proto_ff.Proto_HMLineRateMgr_icon shulaibao = 3;
  if (has_shulaibao()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->shulaibao(), target);
  }

  // optional .proto_ff.Proto_HMLineRateMgr_mary mary = 4;
  if (has_mary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->mary(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_HMLineRateMgr::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .proto_ff.Proto_HMLineRateMgr_icon main = 1;
    if (has_main()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->main());
    }

    // optional .proto_ff.Proto_HMLineRateMgr_icon free = 2;
    if (has_free()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->free());
    }

    // optional .proto_ff.Proto_HMLineRateMgr_icon shulaibao = 3;
    if (has_shulaibao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shulaibao());
    }

    // optional .proto_ff.Proto_HMLineRateMgr_mary mary = 4;
    if (has_mary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mary());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_HMLineRateMgr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_HMLineRateMgr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_HMLineRateMgr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_HMLineRateMgr::MergeFrom(const Proto_HMLineRateMgr& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_main()) {
      mutable_main()->::proto_ff::Proto_HMLineRateMgr_icon::MergeFrom(from.main());
    }
    if (from.has_free()) {
      mutable_free()->::proto_ff::Proto_HMLineRateMgr_icon::MergeFrom(from.free());
    }
    if (from.has_shulaibao()) {
      mutable_shulaibao()->::proto_ff::Proto_HMLineRateMgr_icon::MergeFrom(from.shulaibao());
    }
    if (from.has_mary()) {
      mutable_mary()->::proto_ff::Proto_HMLineRateMgr_mary::MergeFrom(from.mary());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_HMLineRateMgr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_HMLineRateMgr::CopyFrom(const Proto_HMLineRateMgr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_HMLineRateMgr::IsInitialized() const {

  return true;
}

void Proto_HMLineRateMgr::Swap(Proto_HMLineRateMgr* other) {
  if (other != this) {
    std::swap(main_, other->main_);
    std::swap(free_, other->free_);
    std::swap(shulaibao_, other->shulaibao_);
    std::swap(mary_, other->mary_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_HMLineRateMgr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_HMLineRateMgr_descriptor_;
  metadata.reflection = Proto_HMLineRateMgr_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_HMRecordItem_Row::kColFieldNumber;
#endif  // !_MSC_VER

Proto_HMRecordItem_Row::Proto_HMRecordItem_Row()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_HMRecordItem_Row::InitAsDefaultInstance() {
}

Proto_HMRecordItem_Row::Proto_HMRecordItem_Row(const Proto_HMRecordItem_Row& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_HMRecordItem_Row::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_HMRecordItem_Row::~Proto_HMRecordItem_Row() {
  SharedDtor();
}

void Proto_HMRecordItem_Row::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_HMRecordItem_Row::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_HMRecordItem_Row::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_HMRecordItem_Row_descriptor_;
}

const Proto_HMRecordItem_Row& Proto_HMRecordItem_Row::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LinkResMeta_2eproto();
  return *default_instance_;
}

Proto_HMRecordItem_Row* Proto_HMRecordItem_Row::default_instance_ = NULL;

Proto_HMRecordItem_Row* Proto_HMRecordItem_Row::New() const {
  return new Proto_HMRecordItem_Row;
}

void Proto_HMRecordItem_Row::Clear() {
  col_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_HMRecordItem_Row::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 col = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_col:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_col())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_col())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_col;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_HMRecordItem_Row::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 col = 1;
  for (int i = 0; i < this->col_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->col(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_HMRecordItem_Row::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 col = 1;
  for (int i = 0; i < this->col_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->col(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_HMRecordItem_Row::ByteSize() const {
  int total_size = 0;

  // repeated int32 col = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->col_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->col(i));
    }
    total_size += 1 * this->col_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_HMRecordItem_Row::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_HMRecordItem_Row* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_HMRecordItem_Row*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_HMRecordItem_Row::MergeFrom(const Proto_HMRecordItem_Row& from) {
  GOOGLE_CHECK_NE(&from, this);
  col_.MergeFrom(from.col_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_HMRecordItem_Row::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_HMRecordItem_Row::CopyFrom(const Proto_HMRecordItem_Row& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_HMRecordItem_Row::IsInitialized() const {

  return true;
}

void Proto_HMRecordItem_Row::Swap(Proto_HMRecordItem_Row* other) {
  if (other != this) {
    col_.Swap(&other->col_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_HMRecordItem_Row::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_HMRecordItem_Row_descriptor_;
  metadata.reflection = Proto_HMRecordItem_Row_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_HMRecordItem::kRowFieldNumber;
#endif  // !_MSC_VER

Proto_HMRecordItem::Proto_HMRecordItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_HMRecordItem::InitAsDefaultInstance() {
}

Proto_HMRecordItem::Proto_HMRecordItem(const Proto_HMRecordItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_HMRecordItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_HMRecordItem::~Proto_HMRecordItem() {
  SharedDtor();
}

void Proto_HMRecordItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_HMRecordItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_HMRecordItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_HMRecordItem_descriptor_;
}

const Proto_HMRecordItem& Proto_HMRecordItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LinkResMeta_2eproto();
  return *default_instance_;
}

Proto_HMRecordItem* Proto_HMRecordItem::default_instance_ = NULL;

Proto_HMRecordItem* Proto_HMRecordItem::New() const {
  return new Proto_HMRecordItem;
}

void Proto_HMRecordItem::Clear() {
  row_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_HMRecordItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.Proto_HMRecordItem_Row row = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_row:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_row()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_row;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_HMRecordItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.Proto_HMRecordItem_Row row = 1;
  for (int i = 0; i < this->row_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->row(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_HMRecordItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.Proto_HMRecordItem_Row row = 1;
  for (int i = 0; i < this->row_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->row(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_HMRecordItem::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.Proto_HMRecordItem_Row row = 1;
  total_size += 1 * this->row_size();
  for (int i = 0; i < this->row_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->row(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_HMRecordItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_HMRecordItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_HMRecordItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_HMRecordItem::MergeFrom(const Proto_HMRecordItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  row_.MergeFrom(from.row_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_HMRecordItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_HMRecordItem::CopyFrom(const Proto_HMRecordItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_HMRecordItem::IsInitialized() const {

  return true;
}

void Proto_HMRecordItem::Swap(Proto_HMRecordItem* other) {
  if (other != this) {
    row_.Swap(&other->row_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_HMRecordItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_HMRecordItem_descriptor_;
  metadata.reflection = Proto_HMRecordItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_MaryResult::kOuterValueFieldNumber;
const int Proto_MaryResult::kMulFieldNumber;
const int Proto_MaryResult::kVecInnerValueFieldNumber;
#endif  // !_MSC_VER

Proto_MaryResult::Proto_MaryResult()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_MaryResult::InitAsDefaultInstance() {
}

Proto_MaryResult::Proto_MaryResult(const Proto_MaryResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_MaryResult::SharedCtor() {
  _cached_size_ = 0;
  outer_value_ = 0;
  mul_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_MaryResult::~Proto_MaryResult() {
  SharedDtor();
}

void Proto_MaryResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_MaryResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_MaryResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_MaryResult_descriptor_;
}

const Proto_MaryResult& Proto_MaryResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LinkResMeta_2eproto();
  return *default_instance_;
}

Proto_MaryResult* Proto_MaryResult::default_instance_ = NULL;

Proto_MaryResult* Proto_MaryResult::New() const {
  return new Proto_MaryResult;
}

void Proto_MaryResult::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    outer_value_ = 0;
    mul_ = 0;
  }
  vec_inner_value_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_MaryResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 outer_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &outer_value_)));
          set_has_outer_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mul;
        break;
      }

      // optional int32 mul = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mul:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mul_)));
          set_has_mul();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_vec_inner_value;
        break;
      }

      // repeated int32 vec_inner_value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vec_inner_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_vec_inner_value())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_vec_inner_value())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_vec_inner_value;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_MaryResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 outer_value = 1;
  if (has_outer_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->outer_value(), output);
  }

  // optional int32 mul = 2;
  if (has_mul()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mul(), output);
  }

  // repeated int32 vec_inner_value = 3;
  for (int i = 0; i < this->vec_inner_value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->vec_inner_value(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_MaryResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 outer_value = 1;
  if (has_outer_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->outer_value(), target);
  }

  // optional int32 mul = 2;
  if (has_mul()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mul(), target);
  }

  // repeated int32 vec_inner_value = 3;
  for (int i = 0; i < this->vec_inner_value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->vec_inner_value(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_MaryResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 outer_value = 1;
    if (has_outer_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->outer_value());
    }

    // optional int32 mul = 2;
    if (has_mul()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mul());
    }

  }
  // repeated int32 vec_inner_value = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->vec_inner_value_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->vec_inner_value(i));
    }
    total_size += 1 * this->vec_inner_value_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_MaryResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_MaryResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_MaryResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_MaryResult::MergeFrom(const Proto_MaryResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  vec_inner_value_.MergeFrom(from.vec_inner_value_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_outer_value()) {
      set_outer_value(from.outer_value());
    }
    if (from.has_mul()) {
      set_mul(from.mul());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_MaryResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_MaryResult::CopyFrom(const Proto_MaryResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_MaryResult::IsInitialized() const {

  return true;
}

void Proto_MaryResult::Swap(Proto_MaryResult* other) {
  if (other != this) {
    std::swap(outer_value_, other->outer_value_);
    std::swap(mul_, other->mul_);
    vec_inner_value_.Swap(&other->vec_inner_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_MaryResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_MaryResult_descriptor_;
  metadata.reflection = Proto_MaryResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_LineColCfg_item::kItemFieldNumber;
#endif  // !_MSC_VER

Proto_LineColCfg_item::Proto_LineColCfg_item()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_LineColCfg_item::InitAsDefaultInstance() {
}

Proto_LineColCfg_item::Proto_LineColCfg_item(const Proto_LineColCfg_item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_LineColCfg_item::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_LineColCfg_item::~Proto_LineColCfg_item() {
  SharedDtor();
}

void Proto_LineColCfg_item::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_LineColCfg_item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_LineColCfg_item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_LineColCfg_item_descriptor_;
}

const Proto_LineColCfg_item& Proto_LineColCfg_item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LinkResMeta_2eproto();
  return *default_instance_;
}

Proto_LineColCfg_item* Proto_LineColCfg_item::default_instance_ = NULL;

Proto_LineColCfg_item* Proto_LineColCfg_item::New() const {
  return new Proto_LineColCfg_item;
}

void Proto_LineColCfg_item::Clear() {
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_LineColCfg_item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_item())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_LineColCfg_item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_LineColCfg_item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_LineColCfg_item::ByteSize() const {
  int total_size = 0;

  // repeated int32 item = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item(i));
    }
    total_size += 1 * this->item_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_LineColCfg_item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_LineColCfg_item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_LineColCfg_item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_LineColCfg_item::MergeFrom(const Proto_LineColCfg_item& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_LineColCfg_item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_LineColCfg_item::CopyFrom(const Proto_LineColCfg_item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_LineColCfg_item::IsInitialized() const {

  return true;
}

void Proto_LineColCfg_item::Swap(Proto_LineColCfg_item* other) {
  if (other != this) {
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_LineColCfg_item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_LineColCfg_item_descriptor_;
  metadata.reflection = Proto_LineColCfg_item_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_LineColCfg_Col::kColFieldNumber;
#endif  // !_MSC_VER

Proto_LineColCfg_Col::Proto_LineColCfg_Col()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_LineColCfg_Col::InitAsDefaultInstance() {
}

Proto_LineColCfg_Col::Proto_LineColCfg_Col(const Proto_LineColCfg_Col& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_LineColCfg_Col::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_LineColCfg_Col::~Proto_LineColCfg_Col() {
  SharedDtor();
}

void Proto_LineColCfg_Col::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_LineColCfg_Col::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_LineColCfg_Col::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_LineColCfg_Col_descriptor_;
}

const Proto_LineColCfg_Col& Proto_LineColCfg_Col::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LinkResMeta_2eproto();
  return *default_instance_;
}

Proto_LineColCfg_Col* Proto_LineColCfg_Col::default_instance_ = NULL;

Proto_LineColCfg_Col* Proto_LineColCfg_Col::New() const {
  return new Proto_LineColCfg_Col;
}

void Proto_LineColCfg_Col::Clear() {
  col_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_LineColCfg_Col::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.Proto_LineColCfg_item Col = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Col:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_col()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Col;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_LineColCfg_Col::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.Proto_LineColCfg_item Col = 1;
  for (int i = 0; i < this->col_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->col(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_LineColCfg_Col::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.Proto_LineColCfg_item Col = 1;
  for (int i = 0; i < this->col_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->col(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_LineColCfg_Col::ByteSize() const {
  int total_size = 0;

  // repeated .proto_ff.Proto_LineColCfg_item Col = 1;
  total_size += 1 * this->col_size();
  for (int i = 0; i < this->col_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->col(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_LineColCfg_Col::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_LineColCfg_Col* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_LineColCfg_Col*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_LineColCfg_Col::MergeFrom(const Proto_LineColCfg_Col& from) {
  GOOGLE_CHECK_NE(&from, this);
  col_.MergeFrom(from.col_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_LineColCfg_Col::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_LineColCfg_Col::CopyFrom(const Proto_LineColCfg_Col& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_LineColCfg_Col::IsInitialized() const {

  return true;
}

void Proto_LineColCfg_Col::Swap(Proto_LineColCfg_Col* other) {
  if (other != this) {
    col_.Swap(&other->col_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_LineColCfg_Col::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_LineColCfg_Col_descriptor_;
  metadata.reflection = Proto_LineColCfg_Col_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_LineColCfg::kMainFieldNumber;
const int Proto_LineColCfg::kFreeFieldNumber;
const int Proto_LineColCfg::kShulaibaoFieldNumber;
const int Proto_LineColCfg::kBubugaoFieldNumber;
#endif  // !_MSC_VER

Proto_LineColCfg::Proto_LineColCfg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_LineColCfg::InitAsDefaultInstance() {
  main_ = const_cast< ::proto_ff::Proto_LineColCfg_Col*>(&::proto_ff::Proto_LineColCfg_Col::default_instance());
  free_ = const_cast< ::proto_ff::Proto_LineColCfg_Col*>(&::proto_ff::Proto_LineColCfg_Col::default_instance());
  shulaibao_ = const_cast< ::proto_ff::Proto_LineColCfg_Col*>(&::proto_ff::Proto_LineColCfg_Col::default_instance());
  bubugao_ = const_cast< ::proto_ff::Proto_LineColCfg_Col*>(&::proto_ff::Proto_LineColCfg_Col::default_instance());
}

Proto_LineColCfg::Proto_LineColCfg(const Proto_LineColCfg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_LineColCfg::SharedCtor() {
  _cached_size_ = 0;
  main_ = NULL;
  free_ = NULL;
  shulaibao_ = NULL;
  bubugao_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_LineColCfg::~Proto_LineColCfg() {
  SharedDtor();
}

void Proto_LineColCfg::SharedDtor() {
  if (this != default_instance_) {
    delete main_;
    delete free_;
    delete shulaibao_;
    delete bubugao_;
  }
}

void Proto_LineColCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_LineColCfg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_LineColCfg_descriptor_;
}

const Proto_LineColCfg& Proto_LineColCfg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LinkResMeta_2eproto();
  return *default_instance_;
}

Proto_LineColCfg* Proto_LineColCfg::default_instance_ = NULL;

Proto_LineColCfg* Proto_LineColCfg::New() const {
  return new Proto_LineColCfg;
}

void Proto_LineColCfg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_main()) {
      if (main_ != NULL) main_->::proto_ff::Proto_LineColCfg_Col::Clear();
    }
    if (has_free()) {
      if (free_ != NULL) free_->::proto_ff::Proto_LineColCfg_Col::Clear();
    }
    if (has_shulaibao()) {
      if (shulaibao_ != NULL) shulaibao_->::proto_ff::Proto_LineColCfg_Col::Clear();
    }
    if (has_bubugao()) {
      if (bubugao_ != NULL) bubugao_->::proto_ff::Proto_LineColCfg_Col::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_LineColCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto_ff.Proto_LineColCfg_Col main = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_main()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_free;
        break;
      }

      // optional .proto_ff.Proto_LineColCfg_Col free = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_free:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_free()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_shulaibao;
        break;
      }

      // optional .proto_ff.Proto_LineColCfg_Col shulaibao = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shulaibao:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shulaibao()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_bubugao;
        break;
      }

      // optional .proto_ff.Proto_LineColCfg_Col bubugao = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bubugao:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bubugao()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_LineColCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .proto_ff.Proto_LineColCfg_Col main = 1;
  if (has_main()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->main(), output);
  }

  // optional .proto_ff.Proto_LineColCfg_Col free = 2;
  if (has_free()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->free(), output);
  }

  // optional .proto_ff.Proto_LineColCfg_Col shulaibao = 3;
  if (has_shulaibao()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->shulaibao(), output);
  }

  // optional .proto_ff.Proto_LineColCfg_Col bubugao = 4;
  if (has_bubugao()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->bubugao(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_LineColCfg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .proto_ff.Proto_LineColCfg_Col main = 1;
  if (has_main()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->main(), target);
  }

  // optional .proto_ff.Proto_LineColCfg_Col free = 2;
  if (has_free()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->free(), target);
  }

  // optional .proto_ff.Proto_LineColCfg_Col shulaibao = 3;
  if (has_shulaibao()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->shulaibao(), target);
  }

  // optional .proto_ff.Proto_LineColCfg_Col bubugao = 4;
  if (has_bubugao()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->bubugao(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_LineColCfg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .proto_ff.Proto_LineColCfg_Col main = 1;
    if (has_main()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->main());
    }

    // optional .proto_ff.Proto_LineColCfg_Col free = 2;
    if (has_free()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->free());
    }

    // optional .proto_ff.Proto_LineColCfg_Col shulaibao = 3;
    if (has_shulaibao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shulaibao());
    }

    // optional .proto_ff.Proto_LineColCfg_Col bubugao = 4;
    if (has_bubugao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bubugao());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_LineColCfg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_LineColCfg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_LineColCfg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_LineColCfg::MergeFrom(const Proto_LineColCfg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_main()) {
      mutable_main()->::proto_ff::Proto_LineColCfg_Col::MergeFrom(from.main());
    }
    if (from.has_free()) {
      mutable_free()->::proto_ff::Proto_LineColCfg_Col::MergeFrom(from.free());
    }
    if (from.has_shulaibao()) {
      mutable_shulaibao()->::proto_ff::Proto_LineColCfg_Col::MergeFrom(from.shulaibao());
    }
    if (from.has_bubugao()) {
      mutable_bubugao()->::proto_ff::Proto_LineColCfg_Col::MergeFrom(from.bubugao());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_LineColCfg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_LineColCfg::CopyFrom(const Proto_LineColCfg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_LineColCfg::IsInitialized() const {

  return true;
}

void Proto_LineColCfg::Swap(Proto_LineColCfg* other) {
  if (other != this) {
    std::swap(main_, other->main_);
    std::swap(free_, other->free_);
    std::swap(shulaibao_, other->shulaibao_);
    std::swap(bubugao_, other->bubugao_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_LineColCfg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_LineColCfg_descriptor_;
  metadata.reflection = Proto_LineColCfg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_LinkResult_item::kItemFieldNumber;
#endif  // !_MSC_VER

Proto_LinkResult_item::Proto_LinkResult_item()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_LinkResult_item::InitAsDefaultInstance() {
}

Proto_LinkResult_item::Proto_LinkResult_item(const Proto_LinkResult_item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_LinkResult_item::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_LinkResult_item::~Proto_LinkResult_item() {
  SharedDtor();
}

void Proto_LinkResult_item::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_LinkResult_item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_LinkResult_item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_LinkResult_item_descriptor_;
}

const Proto_LinkResult_item& Proto_LinkResult_item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LinkResMeta_2eproto();
  return *default_instance_;
}

Proto_LinkResult_item* Proto_LinkResult_item::default_instance_ = NULL;

Proto_LinkResult_item* Proto_LinkResult_item::New() const {
  return new Proto_LinkResult_item;
}

void Proto_LinkResult_item::Clear() {
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_LinkResult_item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_item())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_LinkResult_item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_LinkResult_item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_LinkResult_item::ByteSize() const {
  int total_size = 0;

  // repeated int32 item = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item(i));
    }
    total_size += 1 * this->item_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_LinkResult_item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_LinkResult_item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_LinkResult_item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_LinkResult_item::MergeFrom(const Proto_LinkResult_item& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_LinkResult_item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_LinkResult_item::CopyFrom(const Proto_LinkResult_item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_LinkResult_item::IsInitialized() const {

  return true;
}

void Proto_LinkResult_item::Swap(Proto_LinkResult_item* other) {
  if (other != this) {
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_LinkResult_item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_LinkResult_item_descriptor_;
  metadata.reflection = Proto_LinkResult_item_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_LinkResult_Row::kRowFieldNumber;
const int Proto_LinkResult_Row::kResulttypeFieldNumber;
const int Proto_LinkResult_Row::kRowcountFieldNumber;
const int Proto_LinkResult_Row::kColcountFieldNumber;
#endif  // !_MSC_VER

Proto_LinkResult_Row::Proto_LinkResult_Row()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_LinkResult_Row::InitAsDefaultInstance() {
}

Proto_LinkResult_Row::Proto_LinkResult_Row(const Proto_LinkResult_Row& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_LinkResult_Row::SharedCtor() {
  _cached_size_ = 0;
  resulttype_ = 0;
  rowcount_ = 0;
  colcount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_LinkResult_Row::~Proto_LinkResult_Row() {
  SharedDtor();
}

void Proto_LinkResult_Row::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_LinkResult_Row::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_LinkResult_Row::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_LinkResult_Row_descriptor_;
}

const Proto_LinkResult_Row& Proto_LinkResult_Row::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LinkResMeta_2eproto();
  return *default_instance_;
}

Proto_LinkResult_Row* Proto_LinkResult_Row::default_instance_ = NULL;

Proto_LinkResult_Row* Proto_LinkResult_Row::New() const {
  return new Proto_LinkResult_Row;
}

void Proto_LinkResult_Row::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    resulttype_ = 0;
    rowcount_ = 0;
    colcount_ = 0;
  }
  row_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_LinkResult_Row::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto_ff.Proto_LineColCfg_item Row = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Row:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_row()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Row;
        if (input->ExpectTag(16)) goto parse_resulttype;
        break;
      }

      // optional int32 resulttype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_resulttype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resulttype_)));
          set_has_resulttype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_rowcount;
        break;
      }

      // optional int32 rowcount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rowcount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rowcount_)));
          set_has_rowcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_colcount;
        break;
      }

      // optional int32 colcount = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_colcount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &colcount_)));
          set_has_colcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_LinkResult_Row::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .proto_ff.Proto_LineColCfg_item Row = 1;
  for (int i = 0; i < this->row_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->row(i), output);
  }

  // optional int32 resulttype = 2;
  if (has_resulttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->resulttype(), output);
  }

  // optional int32 rowcount = 3;
  if (has_rowcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rowcount(), output);
  }

  // optional int32 colcount = 4;
  if (has_colcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->colcount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_LinkResult_Row::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .proto_ff.Proto_LineColCfg_item Row = 1;
  for (int i = 0; i < this->row_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->row(i), target);
  }

  // optional int32 resulttype = 2;
  if (has_resulttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->resulttype(), target);
  }

  // optional int32 rowcount = 3;
  if (has_rowcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rowcount(), target);
  }

  // optional int32 colcount = 4;
  if (has_colcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->colcount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_LinkResult_Row::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 resulttype = 2;
    if (has_resulttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->resulttype());
    }

    // optional int32 rowcount = 3;
    if (has_rowcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rowcount());
    }

    // optional int32 colcount = 4;
    if (has_colcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->colcount());
    }

  }
  // repeated .proto_ff.Proto_LineColCfg_item Row = 1;
  total_size += 1 * this->row_size();
  for (int i = 0; i < this->row_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->row(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_LinkResult_Row::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_LinkResult_Row* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_LinkResult_Row*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_LinkResult_Row::MergeFrom(const Proto_LinkResult_Row& from) {
  GOOGLE_CHECK_NE(&from, this);
  row_.MergeFrom(from.row_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_resulttype()) {
      set_resulttype(from.resulttype());
    }
    if (from.has_rowcount()) {
      set_rowcount(from.rowcount());
    }
    if (from.has_colcount()) {
      set_colcount(from.colcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_LinkResult_Row::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_LinkResult_Row::CopyFrom(const Proto_LinkResult_Row& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_LinkResult_Row::IsInitialized() const {

  return true;
}

void Proto_LinkResult_Row::Swap(Proto_LinkResult_Row* other) {
  if (other != this) {
    row_.Swap(&other->row_);
    std::swap(resulttype_, other->resulttype_);
    std::swap(rowcount_, other->rowcount_);
    std::swap(colcount_, other->colcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_LinkResult_Row::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_LinkResult_Row_descriptor_;
  metadata.reflection = Proto_LinkResult_Row_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto_LinkResult::kConfigFieldNumber;
#endif  // !_MSC_VER

Proto_LinkResult::Proto_LinkResult()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto_LinkResult::InitAsDefaultInstance() {
  config_ = const_cast< ::proto_ff::Proto_LinkResult_Row*>(&::proto_ff::Proto_LinkResult_Row::default_instance());
}

Proto_LinkResult::Proto_LinkResult(const Proto_LinkResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto_LinkResult::SharedCtor() {
  _cached_size_ = 0;
  config_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto_LinkResult::~Proto_LinkResult() {
  SharedDtor();
}

void Proto_LinkResult::SharedDtor() {
  if (this != default_instance_) {
    delete config_;
  }
}

void Proto_LinkResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_LinkResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_LinkResult_descriptor_;
}

const Proto_LinkResult& Proto_LinkResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LinkResMeta_2eproto();
  return *default_instance_;
}

Proto_LinkResult* Proto_LinkResult::default_instance_ = NULL;

Proto_LinkResult* Proto_LinkResult::New() const {
  return new Proto_LinkResult;
}

void Proto_LinkResult::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_config()) {
      if (config_ != NULL) config_->::proto_ff::Proto_LinkResult_Row::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto_LinkResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto_ff.Proto_LinkResult_Row config = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto_LinkResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .proto_ff.Proto_LinkResult_Row config = 1;
  if (has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->config(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto_LinkResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .proto_ff.Proto_LinkResult_Row config = 1;
  if (has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->config(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto_LinkResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .proto_ff.Proto_LinkResult_Row config = 1;
    if (has_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->config());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_LinkResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto_LinkResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto_LinkResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto_LinkResult::MergeFrom(const Proto_LinkResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_config()) {
      mutable_config()->::proto_ff::Proto_LinkResult_Row::MergeFrom(from.config());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto_LinkResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_LinkResult::CopyFrom(const Proto_LinkResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_LinkResult::IsInitialized() const {

  return true;
}

void Proto_LinkResult::Swap(Proto_LinkResult* other) {
  if (other != this) {
    std::swap(config_, other->config_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto_LinkResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_LinkResult_descriptor_;
  metadata.reflection = Proto_LinkResult_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

// @@protoc_insertion_point(global_scope)
