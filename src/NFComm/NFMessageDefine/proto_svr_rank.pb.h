// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_svr_rank.proto

#ifndef PROTOBUF_proto_5fsvr_5frank_2eproto__INCLUDED
#define PROTOBUF_proto_5fsvr_5frank_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "yd_fieldoptions.pb.h"
#include "proto_common.pb.h"
#include "proto_cs_rank.pb.h"
// @@protoc_insertion_point(includes)

namespace proto_ff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_5fsvr_5frank_2eproto();
void protobuf_AssignDesc_proto_5fsvr_5frank_2eproto();
void protobuf_ShutdownFile_proto_5fsvr_5frank_2eproto();

class Proto_STSnsUpdateRankReq;
class Proto_SnsTSUpdateRankRsp;
class Proto_LTSGetCommonRankReq;
class Proto_STLGetCommonRankRsp;

enum Proto_RankSvrMsgID {
  NF_STSns_UPDATE_RANK_REQ = 280,
  NF_SnsTS_UPDATE_RANK_RSP = 281,
  NF_LTS_GET_COMMON_RANK_REQ = 284,
  NF_STL_GET_COMMON_RANK_RSP = 285
};
bool Proto_RankSvrMsgID_IsValid(int value);
const Proto_RankSvrMsgID Proto_RankSvrMsgID_MIN = NF_STSns_UPDATE_RANK_REQ;
const Proto_RankSvrMsgID Proto_RankSvrMsgID_MAX = NF_STL_GET_COMMON_RANK_RSP;
const int Proto_RankSvrMsgID_ARRAYSIZE = Proto_RankSvrMsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* Proto_RankSvrMsgID_descriptor();
inline const ::std::string& Proto_RankSvrMsgID_Name(Proto_RankSvrMsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    Proto_RankSvrMsgID_descriptor(), value);
}
inline bool Proto_RankSvrMsgID_Parse(
    const ::std::string& name, Proto_RankSvrMsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Proto_RankSvrMsgID>(
    Proto_RankSvrMsgID_descriptor(), name, value);
}
// ===================================================================

class Proto_STSnsUpdateRankReq : public ::google::protobuf::Message {
 public:
  Proto_STSnsUpdateRankReq();
  virtual ~Proto_STSnsUpdateRankReq();

  Proto_STSnsUpdateRankReq(const Proto_STSnsUpdateRankReq& from);

  inline Proto_STSnsUpdateRankReq& operator=(const Proto_STSnsUpdateRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_STSnsUpdateRankReq& default_instance();

  void Swap(Proto_STSnsUpdateRankReq* other);

  // implements Message ----------------------------------------------

  Proto_STSnsUpdateRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_STSnsUpdateRankReq& from);
  void MergeFrom(const Proto_STSnsUpdateRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.enRankType rank_type = 1;
  inline bool has_rank_type() const;
  inline void clear_rank_type();
  static const int kRankTypeFieldNumber = 1;
  inline ::proto_ff::enRankType rank_type() const;
  inline void set_rank_type(::proto_ff::enRankType value);

  // optional .proto_ff.RankCommonScore score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline const ::proto_ff::RankCommonScore& score() const;
  inline ::proto_ff::RankCommonScore* mutable_score();
  inline ::proto_ff::RankCommonScore* release_score();
  inline void set_allocated_score(::proto_ff::RankCommonScore* score);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_STSnsUpdateRankReq)
 private:
  inline void set_has_rank_type();
  inline void clear_has_rank_type();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::proto_ff::RankCommonScore* score_;
  int rank_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5frank_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5frank_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5frank_2eproto();

  void InitAsDefaultInstance();
  static Proto_STSnsUpdateRankReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SnsTSUpdateRankRsp : public ::google::protobuf::Message {
 public:
  Proto_SnsTSUpdateRankRsp();
  virtual ~Proto_SnsTSUpdateRankRsp();

  Proto_SnsTSUpdateRankRsp(const Proto_SnsTSUpdateRankRsp& from);

  inline Proto_SnsTSUpdateRankRsp& operator=(const Proto_SnsTSUpdateRankRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SnsTSUpdateRankRsp& default_instance();

  void Swap(Proto_SnsTSUpdateRankRsp* other);

  // implements Message ----------------------------------------------

  Proto_SnsTSUpdateRankRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SnsTSUpdateRankRsp& from);
  void MergeFrom(const Proto_SnsTSUpdateRankRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.enRankType rank_type = 1;
  inline bool has_rank_type() const;
  inline void clear_rank_type();
  static const int kRankTypeFieldNumber = 1;
  inline ::proto_ff::enRankType rank_type() const;
  inline void set_rank_type(::proto_ff::enRankType value);

  // optional uint64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional int32 rank_old = 3;
  inline bool has_rank_old() const;
  inline void clear_rank_old();
  static const int kRankOldFieldNumber = 3;
  inline ::google::protobuf::int32 rank_old() const;
  inline void set_rank_old(::google::protobuf::int32 value);

  // optional int32 rank_new = 4;
  inline bool has_rank_new() const;
  inline void clear_rank_new();
  static const int kRankNewFieldNumber = 4;
  inline ::google::protobuf::int32 rank_new() const;
  inline void set_rank_new(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_SnsTSUpdateRankRsp)
 private:
  inline void set_has_rank_type();
  inline void clear_has_rank_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rank_old();
  inline void clear_has_rank_old();
  inline void set_has_rank_new();
  inline void clear_has_rank_new();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  int rank_type_;
  ::google::protobuf::int32 rank_old_;
  ::google::protobuf::int32 rank_new_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5frank_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5frank_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5frank_2eproto();

  void InitAsDefaultInstance();
  static Proto_SnsTSUpdateRankRsp* default_instance_;
};
// -------------------------------------------------------------------

class Proto_LTSGetCommonRankReq : public ::google::protobuf::Message {
 public:
  Proto_LTSGetCommonRankReq();
  virtual ~Proto_LTSGetCommonRankReq();

  Proto_LTSGetCommonRankReq(const Proto_LTSGetCommonRankReq& from);

  inline Proto_LTSGetCommonRankReq& operator=(const Proto_LTSGetCommonRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_LTSGetCommonRankReq& default_instance();

  void Swap(Proto_LTSGetCommonRankReq* other);

  // implements Message ----------------------------------------------

  Proto_LTSGetCommonRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_LTSGetCommonRankReq& from);
  void MergeFrom(const Proto_LTSGetCommonRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto_ff.enRankType rank_type = 1;
  inline bool has_rank_type() const;
  inline void clear_rank_type();
  static const int kRankTypeFieldNumber = 1;
  inline ::proto_ff::enRankType rank_type() const;
  inline void set_rank_type(::proto_ff::enRankType value);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional int32 rank_from = 10;
  inline bool has_rank_from() const;
  inline void clear_rank_from();
  static const int kRankFromFieldNumber = 10;
  inline ::google::protobuf::int32 rank_from() const;
  inline void set_rank_from(::google::protobuf::int32 value);

  // optional int32 rank_to = 11;
  inline bool has_rank_to() const;
  inline void clear_rank_to();
  static const int kRankToFieldNumber = 11;
  inline ::google::protobuf::int32 rank_to() const;
  inline void set_rank_to(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_LTSGetCommonRankReq)
 private:
  inline void set_has_rank_type();
  inline void clear_has_rank_type();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_rank_from();
  inline void clear_has_rank_from();
  inline void set_has_rank_to();
  inline void clear_has_rank_to();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  int rank_type_;
  ::google::protobuf::int32 rank_from_;
  ::google::protobuf::int32 rank_to_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5frank_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5frank_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5frank_2eproto();

  void InitAsDefaultInstance();
  static Proto_LTSGetCommonRankReq* default_instance_;
};
// -------------------------------------------------------------------

class Proto_STLGetCommonRankRsp : public ::google::protobuf::Message {
 public:
  Proto_STLGetCommonRankRsp();
  virtual ~Proto_STLGetCommonRankRsp();

  Proto_STLGetCommonRankRsp(const Proto_STLGetCommonRankRsp& from);

  inline Proto_STLGetCommonRankRsp& operator=(const Proto_STLGetCommonRankRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_STLGetCommonRankRsp& default_instance();

  void Swap(Proto_STLGetCommonRankRsp* other);

  // implements Message ----------------------------------------------

  Proto_STLGetCommonRankRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_STLGetCommonRankRsp& from);
  void MergeFrom(const Proto_STLGetCommonRankRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional .proto_ff.enRankType rank_type = 3;
  inline bool has_rank_type() const;
  inline void clear_rank_type();
  static const int kRankTypeFieldNumber = 3;
  inline ::proto_ff::enRankType rank_type() const;
  inline void set_rank_type(::proto_ff::enRankType value);

  // optional int32 my_rank = 4;
  inline bool has_my_rank() const;
  inline void clear_my_rank();
  static const int kMyRankFieldNumber = 4;
  inline ::google::protobuf::int32 my_rank() const;
  inline void set_my_rank(::google::protobuf::int32 value);

  // optional uint64 my_score = 5;
  inline bool has_my_score() const;
  inline void clear_my_score();
  static const int kMyScoreFieldNumber = 5;
  inline ::google::protobuf::uint64 my_score() const;
  inline void set_my_score(::google::protobuf::uint64 value);

  // optional int32 rank_max = 6;
  inline bool has_rank_max() const;
  inline void clear_rank_max();
  static const int kRankMaxFieldNumber = 6;
  inline ::google::protobuf::int32 rank_max() const;
  inline void set_rank_max(::google::protobuf::int32 value);

  // repeated .proto_rank.RankInfo rank_list = 7;
  inline int rank_list_size() const;
  inline void clear_rank_list();
  static const int kRankListFieldNumber = 7;
  inline const ::proto_rank::RankInfo& rank_list(int index) const;
  inline ::proto_rank::RankInfo* mutable_rank_list(int index);
  inline ::proto_rank::RankInfo* add_rank_list();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_rank::RankInfo >&
      rank_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_rank::RankInfo >*
      mutable_rank_list();

  // @@protoc_insertion_point(class_scope:proto_ff.Proto_STLGetCommonRankRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_rank_type();
  inline void clear_has_rank_type();
  inline void set_has_my_rank();
  inline void clear_has_my_rank();
  inline void set_has_my_score();
  inline void clear_has_my_score();
  inline void set_has_rank_max();
  inline void clear_has_rank_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::int32 result_;
  int rank_type_;
  ::google::protobuf::uint64 my_score_;
  ::google::protobuf::int32 my_rank_;
  ::google::protobuf::int32 rank_max_;
  ::google::protobuf::RepeatedPtrField< ::proto_rank::RankInfo > rank_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_proto_5fsvr_5frank_2eproto();
  friend void protobuf_AssignDesc_proto_5fsvr_5frank_2eproto();
  friend void protobuf_ShutdownFile_proto_5fsvr_5frank_2eproto();

  void InitAsDefaultInstance();
  static Proto_STLGetCommonRankRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// Proto_STSnsUpdateRankReq

// optional .proto_ff.enRankType rank_type = 1;
inline bool Proto_STSnsUpdateRankReq::has_rank_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_STSnsUpdateRankReq::set_has_rank_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_STSnsUpdateRankReq::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_STSnsUpdateRankReq::clear_rank_type() {
  rank_type_ = 0;
  clear_has_rank_type();
}
inline ::proto_ff::enRankType Proto_STSnsUpdateRankReq::rank_type() const {
  return static_cast< ::proto_ff::enRankType >(rank_type_);
}
inline void Proto_STSnsUpdateRankReq::set_rank_type(::proto_ff::enRankType value) {
  assert(::proto_ff::enRankType_IsValid(value));
  set_has_rank_type();
  rank_type_ = value;
}

// optional .proto_ff.RankCommonScore score = 2;
inline bool Proto_STSnsUpdateRankReq::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_STSnsUpdateRankReq::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_STSnsUpdateRankReq::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_STSnsUpdateRankReq::clear_score() {
  if (score_ != NULL) score_->::proto_ff::RankCommonScore::Clear();
  clear_has_score();
}
inline const ::proto_ff::RankCommonScore& Proto_STSnsUpdateRankReq::score() const {
  return score_ != NULL ? *score_ : *default_instance_->score_;
}
inline ::proto_ff::RankCommonScore* Proto_STSnsUpdateRankReq::mutable_score() {
  set_has_score();
  if (score_ == NULL) score_ = new ::proto_ff::RankCommonScore;
  return score_;
}
inline ::proto_ff::RankCommonScore* Proto_STSnsUpdateRankReq::release_score() {
  clear_has_score();
  ::proto_ff::RankCommonScore* temp = score_;
  score_ = NULL;
  return temp;
}
inline void Proto_STSnsUpdateRankReq::set_allocated_score(::proto_ff::RankCommonScore* score) {
  delete score_;
  score_ = score;
  if (score) {
    set_has_score();
  } else {
    clear_has_score();
  }
}

// -------------------------------------------------------------------

// Proto_SnsTSUpdateRankRsp

// optional .proto_ff.enRankType rank_type = 1;
inline bool Proto_SnsTSUpdateRankRsp::has_rank_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_SnsTSUpdateRankRsp::set_has_rank_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_SnsTSUpdateRankRsp::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_SnsTSUpdateRankRsp::clear_rank_type() {
  rank_type_ = 0;
  clear_has_rank_type();
}
inline ::proto_ff::enRankType Proto_SnsTSUpdateRankRsp::rank_type() const {
  return static_cast< ::proto_ff::enRankType >(rank_type_);
}
inline void Proto_SnsTSUpdateRankRsp::set_rank_type(::proto_ff::enRankType value) {
  assert(::proto_ff::enRankType_IsValid(value));
  set_has_rank_type();
  rank_type_ = value;
}

// optional uint64 id = 2;
inline bool Proto_SnsTSUpdateRankRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_SnsTSUpdateRankRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_SnsTSUpdateRankRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_SnsTSUpdateRankRsp::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 Proto_SnsTSUpdateRankRsp::id() const {
  return id_;
}
inline void Proto_SnsTSUpdateRankRsp::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 rank_old = 3;
inline bool Proto_SnsTSUpdateRankRsp::has_rank_old() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_SnsTSUpdateRankRsp::set_has_rank_old() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_SnsTSUpdateRankRsp::clear_has_rank_old() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_SnsTSUpdateRankRsp::clear_rank_old() {
  rank_old_ = 0;
  clear_has_rank_old();
}
inline ::google::protobuf::int32 Proto_SnsTSUpdateRankRsp::rank_old() const {
  return rank_old_;
}
inline void Proto_SnsTSUpdateRankRsp::set_rank_old(::google::protobuf::int32 value) {
  set_has_rank_old();
  rank_old_ = value;
}

// optional int32 rank_new = 4;
inline bool Proto_SnsTSUpdateRankRsp::has_rank_new() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_SnsTSUpdateRankRsp::set_has_rank_new() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_SnsTSUpdateRankRsp::clear_has_rank_new() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_SnsTSUpdateRankRsp::clear_rank_new() {
  rank_new_ = 0;
  clear_has_rank_new();
}
inline ::google::protobuf::int32 Proto_SnsTSUpdateRankRsp::rank_new() const {
  return rank_new_;
}
inline void Proto_SnsTSUpdateRankRsp::set_rank_new(::google::protobuf::int32 value) {
  set_has_rank_new();
  rank_new_ = value;
}

// -------------------------------------------------------------------

// Proto_LTSGetCommonRankReq

// optional .proto_ff.enRankType rank_type = 1;
inline bool Proto_LTSGetCommonRankReq::has_rank_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_LTSGetCommonRankReq::set_has_rank_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_LTSGetCommonRankReq::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_LTSGetCommonRankReq::clear_rank_type() {
  rank_type_ = 0;
  clear_has_rank_type();
}
inline ::proto_ff::enRankType Proto_LTSGetCommonRankReq::rank_type() const {
  return static_cast< ::proto_ff::enRankType >(rank_type_);
}
inline void Proto_LTSGetCommonRankReq::set_rank_type(::proto_ff::enRankType value) {
  assert(::proto_ff::enRankType_IsValid(value));
  set_has_rank_type();
  rank_type_ = value;
}

// optional uint64 user_id = 2;
inline bool Proto_LTSGetCommonRankReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_LTSGetCommonRankReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_LTSGetCommonRankReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_LTSGetCommonRankReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_LTSGetCommonRankReq::user_id() const {
  return user_id_;
}
inline void Proto_LTSGetCommonRankReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional int32 rank_from = 10;
inline bool Proto_LTSGetCommonRankReq::has_rank_from() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_LTSGetCommonRankReq::set_has_rank_from() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_LTSGetCommonRankReq::clear_has_rank_from() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_LTSGetCommonRankReq::clear_rank_from() {
  rank_from_ = 0;
  clear_has_rank_from();
}
inline ::google::protobuf::int32 Proto_LTSGetCommonRankReq::rank_from() const {
  return rank_from_;
}
inline void Proto_LTSGetCommonRankReq::set_rank_from(::google::protobuf::int32 value) {
  set_has_rank_from();
  rank_from_ = value;
}

// optional int32 rank_to = 11;
inline bool Proto_LTSGetCommonRankReq::has_rank_to() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_LTSGetCommonRankReq::set_has_rank_to() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_LTSGetCommonRankReq::clear_has_rank_to() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_LTSGetCommonRankReq::clear_rank_to() {
  rank_to_ = 0;
  clear_has_rank_to();
}
inline ::google::protobuf::int32 Proto_LTSGetCommonRankReq::rank_to() const {
  return rank_to_;
}
inline void Proto_LTSGetCommonRankReq::set_rank_to(::google::protobuf::int32 value) {
  set_has_rank_to();
  rank_to_ = value;
}

// -------------------------------------------------------------------

// Proto_STLGetCommonRankRsp

// optional int32 result = 1;
inline bool Proto_STLGetCommonRankRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto_STLGetCommonRankRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto_STLGetCommonRankRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto_STLGetCommonRankRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Proto_STLGetCommonRankRsp::result() const {
  return result_;
}
inline void Proto_STLGetCommonRankRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 user_id = 2;
inline bool Proto_STLGetCommonRankRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto_STLGetCommonRankRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto_STLGetCommonRankRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto_STLGetCommonRankRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 Proto_STLGetCommonRankRsp::user_id() const {
  return user_id_;
}
inline void Proto_STLGetCommonRankRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional .proto_ff.enRankType rank_type = 3;
inline bool Proto_STLGetCommonRankRsp::has_rank_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto_STLGetCommonRankRsp::set_has_rank_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto_STLGetCommonRankRsp::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto_STLGetCommonRankRsp::clear_rank_type() {
  rank_type_ = 0;
  clear_has_rank_type();
}
inline ::proto_ff::enRankType Proto_STLGetCommonRankRsp::rank_type() const {
  return static_cast< ::proto_ff::enRankType >(rank_type_);
}
inline void Proto_STLGetCommonRankRsp::set_rank_type(::proto_ff::enRankType value) {
  assert(::proto_ff::enRankType_IsValid(value));
  set_has_rank_type();
  rank_type_ = value;
}

// optional int32 my_rank = 4;
inline bool Proto_STLGetCommonRankRsp::has_my_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto_STLGetCommonRankRsp::set_has_my_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto_STLGetCommonRankRsp::clear_has_my_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto_STLGetCommonRankRsp::clear_my_rank() {
  my_rank_ = 0;
  clear_has_my_rank();
}
inline ::google::protobuf::int32 Proto_STLGetCommonRankRsp::my_rank() const {
  return my_rank_;
}
inline void Proto_STLGetCommonRankRsp::set_my_rank(::google::protobuf::int32 value) {
  set_has_my_rank();
  my_rank_ = value;
}

// optional uint64 my_score = 5;
inline bool Proto_STLGetCommonRankRsp::has_my_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto_STLGetCommonRankRsp::set_has_my_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto_STLGetCommonRankRsp::clear_has_my_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto_STLGetCommonRankRsp::clear_my_score() {
  my_score_ = GOOGLE_ULONGLONG(0);
  clear_has_my_score();
}
inline ::google::protobuf::uint64 Proto_STLGetCommonRankRsp::my_score() const {
  return my_score_;
}
inline void Proto_STLGetCommonRankRsp::set_my_score(::google::protobuf::uint64 value) {
  set_has_my_score();
  my_score_ = value;
}

// optional int32 rank_max = 6;
inline bool Proto_STLGetCommonRankRsp::has_rank_max() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto_STLGetCommonRankRsp::set_has_rank_max() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto_STLGetCommonRankRsp::clear_has_rank_max() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto_STLGetCommonRankRsp::clear_rank_max() {
  rank_max_ = 0;
  clear_has_rank_max();
}
inline ::google::protobuf::int32 Proto_STLGetCommonRankRsp::rank_max() const {
  return rank_max_;
}
inline void Proto_STLGetCommonRankRsp::set_rank_max(::google::protobuf::int32 value) {
  set_has_rank_max();
  rank_max_ = value;
}

// repeated .proto_rank.RankInfo rank_list = 7;
inline int Proto_STLGetCommonRankRsp::rank_list_size() const {
  return rank_list_.size();
}
inline void Proto_STLGetCommonRankRsp::clear_rank_list() {
  rank_list_.Clear();
}
inline const ::proto_rank::RankInfo& Proto_STLGetCommonRankRsp::rank_list(int index) const {
  return rank_list_.Get(index);
}
inline ::proto_rank::RankInfo* Proto_STLGetCommonRankRsp::mutable_rank_list(int index) {
  return rank_list_.Mutable(index);
}
inline ::proto_rank::RankInfo* Proto_STLGetCommonRankRsp::add_rank_list() {
  return rank_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_rank::RankInfo >&
Proto_STLGetCommonRankRsp::rank_list() const {
  return rank_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_rank::RankInfo >*
Proto_STLGetCommonRankRsp::mutable_rank_list() {
  return &rank_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_ff

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_ff::Proto_RankSvrMsgID>() {
  return ::proto_ff::Proto_RankSvrMsgID_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fsvr_5frank_2eproto__INCLUDED
