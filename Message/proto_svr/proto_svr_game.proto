import "yd_fieldoptions.proto";
import "proto_common.proto";
import "proto_cs_game.proto";

package proto_ff;

// 服务器内部的消息id，是个统一的
//
enum Proto_GameSvrMsgID
{
  //220 - 235////////////////
  NF_GTW_ROOM_REGISTER_REQ = 220;   //房间注册
  NF_GTW_ROOM_REGISTER_RSP = 221;   //房间注册
  NF_GTW_ROOM_UNREGISTER_REQ = 222;   //注销房间
  NF_GTW_ROOM_UNREGISTER_RSP = 223;   //注销房间
  NF_GTW_ROOM_UPDATE_ONLINE_COUNT_REQ = 224;   //更新人数
  NF_GTW_ROOM_UPDATE_ONLINE_COUNT_RSP = 225;   //更新人数

  NF_WTG_LOGIN_ROOM_REQ = 226; //login room
  NF_GTW_LOGIN_ROOM_RSP = 227; //login room

  //220 - 235////////////////

  //250 - 280///////////////
  E_GTL_UPDATE_JETTON_REQ = 250;
  E_LTG_UPDATE_JETTON_RSP = 251;
  E_LTW_UPDATE_JETTON_NOTIFY = 252;
  E_WTL_NOTIFY_PLAYER_ENTER_GAME = 253;
  E_WTL_NOTIFY_PLAYER_EXIT_GAME = 254;
  E_GTL_COIN_QUERY_BALANCE_REQ = 255;
  E_GTL_COIN_QUERY_BALANCE_RPS = 256;

  E_STS_GAME_PLAYER_LEAVE_GAME = 257;
  E_STS_CLEAR_ALL_GAME_PLAYER_NOTIFY = 258;
  E_STS_GAME_SERVER_DUMP_NOTIFY = 259;

  E_LTSns_NOTIFY_PLAYER_ENTER_GAME = 260;
  E_LTSns_NOTIFY_PLAYER_EXIT_GAME = 261;

  E_SnsTGame_SET_USER_MANAGER_INFO = 262;
  E_GameTSns_WRITE_BACK_USER_MANAGER_IFNO = 263;
  E_WorldTSns_GAME_ROOM_REG_NOTIFY = 264;

  E_GameTSns_GAME_ROOM_STAT_INFO_SEND = 265;
  E_GameTSns_GAME_PLAYER_ACH_INFO_SEND = 267;

  E_LogicTGame_UPDATE_PLAYER_COINBALANCE = 268;
  E_SnsTGame_SET_GM_CTRL_GIVE_DATA = 269;
  E_GameTSns_FINISH_GM_CTRL_GIVE_DATA = 270;

  E_LTS_RedeemCodeReq = 271;
  E_STL_RedeemCodeRsp = 272;
}

message Proto_GameTSns_GamePlayerAchInfoReq
{
  optional uint64 user_id = 1;
  optional GamePlayerAchievementData ach_data = 2;
}

message Proto_GameTSns_GameRoomStatInfoReq
{
  optional uint64 game_id = 1;
  optional uint64 room_id = 2;
  optional bool is_exe_scene = 3;
  optional GameRoomStat stat_info = 4;
}

message Proto_GameTSns_WriteBackUserManagerInfo
{
  optional tbGameUserManagerData user_manager_data = 1;
}

message Proto_GameTSns_FinishGMCtrlGiveData
{
  optional tbGmCtrlGiveCtrlData gm_ctrl_data = 1;
}

message Proto_SnsTGame_SetUserManagerInfo
{
  optional uint64 player_id = 1;
  optional tbGameUserManagerData user_manager_data = 2;
}

message Proto_SnsTGame_SetGmCtrlGiveData
{
  optional uint64 player_id = 1;
  optional tbGmCtrlGiveCtrlData gm_ctrl_data = 2;
}

message NotifyLogicPlayerEnterGame
{
  optional uint64 player_id = 1;
  optional uint32 game_id = 2;
  optional uint32 room_id = 3;
  optional uint32 game_bus_id = 4;
}

message NotifyLogicPlayerExitGame
{
  optional uint64 player_id = 1;
}

message NotifySnsPlayerEnterGame
{
  optional uint64 player_id = 1;
  optional uint32 game_id = 2;
  optional uint32 room_id = 3;
  optional uint32 game_bus_id = 4;
}

message NotifySnsPlayerExitGame
{
  optional uint64 player_id = 1;
}

message Proto_QueryCoinBalanceReq
{
  optional uint64 player_id = 1;
}

message Proto_QueryCoinBalanceRsp
{
  optional int32 result = 1;
  optional GamePlayerDetailData player_detail = 2;
}

message Proto_UpdateCoinBalanceNotify
{
  optional GamePlayerDetailData player_detail = 1;
}

message Proto_UpdateJettonReq
{
  optional uint64 player_id = 1;
  optional uint32 game_id = 2;
  optional uint32 room_id = 3;
  optional uint32 desk_id = 4;
  optional uint32 chair_id = 5;
  optional uint32 account_type = 6;
  optional uint32 opt_type = 7;
  optional uint32 opt_reason = 8;
  optional uint32 change_type = 9;
  optional int64 money_change = 10;
  optional uint32 time = 11;
  optional bool add_or_deduce = 12;
}

message Proto_UpdateJettonRsp
{
  optional uint32 result = 1;
  optional uint64 player_id = 2;
  optional int64 money = 3;
}

message Proto_NotifyServerPlayerExitGame
{
  optional uint64 player_id = 1;
  optional uint32 game_id = 2;
  optional uint32 room_id = 3;
  optional uint32 desk_id = 4;
}

message GameRoomRegReq
{
  optional GameServerRoomInfo room_info = 1;
}

message GameRoomUnRegReq
{
  optional GameServerRoomInfo room_info = 1;
}

message GameRoomUpdateOnlineCountReq
{
  optional GameServerRoomInfo room_info = 1;
}

message GameRoomLoginReq
{
  optional uint32 game_id = 1;
  optional uint32 room_id = 2;
  optional uint64 player_id = 3;
  optional uint32 proxy_id = 4;
}

message GameRoomLoginRsp
{
  optional uint32 result = 1;
}

//E_STS_CLEAR_ALL_GAME_PLAYER_NOTIFY = 258;
message ClearAllGamePlayerNotify
{

}

//E_STS_GAME_SERVER_DUMP_NOTIFY
message GameServerDumpNotify
{
  optional uint32 game_id = 1;
  optional uint32 room_id = 2;
  optional uint32 bus_id = 3;
}

//E_LTS_RedeemCodeReq = 271;
message Proto_LTSRedeemCodeReq
{
  optional string id = 1;
  optional uint64 user_id = 2;
}

//E_STL_RedeemCodeRsp = 272;
message Proto_STLRedeemCodeRsp
{
  optional int32 result = 1;
  optional string id = 2;
  optional uint64 user_id = 3;
  optional uint64 add_gold = 4;
}